{
  
    
        "post0": {
            "title": "Style transfer for 3d nft background",
            "content": "import pandas as pd import numpy as np import tensorflow as tf import matplotlib.pyplot as plt import os import glob2 . tf.__version__ . &#39;2.7.0&#39; . os.environ[&#39;TFHUB_MODEL_LOAD_FORMAT&#39;] = &#39;COMPRESSED&#39; . import IPython.display as display import matplotlib as mpl import time import functools . def tensor_to_image(tensor): tensor = tensor*255 tensor = np.array(tensor, dtype=np.uint8) if np.ndim(tensor)&gt;3: assert tensor.shape[0] == 1 tensor = tensor[0] return PIL.Image.fromarray(tensor) . content_path = &#39;data/images/style_d2.jpg&#39; style_path = &#39;data/images/style.jpg&#39; . def load_img(path_to_img): max_dim = 512 img = tf.io.read_file(path_to_img) img = tf.image.decode_image(img, channels=3) img = tf.image.convert_image_dtype(img, tf.float32) shape = tf.cast(tf.shape(img)[:-1],tf.float32) long_dim = max(shape) scale = max_dim / long_dim new_shape = tf.cast(shape * scale, tf.int32) img = tf.image.resize(img, new_shape) img = img[tf.newaxis, :] return img . def imshow(image, title=None): if len(image.shape) &gt; 3: image = tf.squeeze(image, axis=0) plt.imshow(image) if title: plt.title(title) . content_image = load_img(content_path) style_image = load_img(style_path) plt.subplot(1, 2, 1) imshow(content_image, &#39;Content Image&#39;) plt.subplot(1, 2, 2) imshow(style_image, &#39;Style Image&#39;) . %pip install tensorflow_hub . Collecting tensorflow_hubNote: you may need to restart the kernel to use updated packages. Downloading tensorflow_hub-0.12.0-py2.py3-none-any.whl (108 kB) Requirement already satisfied: numpy&gt;=1.12.0 in c: users user anaconda3 lib site-packages (from tensorflow_hub) (1.20.3) Requirement already satisfied: protobuf&gt;=3.8.0 in c: users user anaconda3 lib site-packages (from tensorflow_hub) (3.19.1) Installing collected packages: tensorflow-hub Successfully installed tensorflow-hub-0.12.0 . import tensorflow_hub as hub # load hub model . . stylized_image = model(tf.constant(content_image), tf.constant(style_image))[0] #tensor_to_image(stylized_image)#.save(&#39;data/images/stylized.jpg&#39;) . import PIL from PIL import Image . tensor_to_image(stylized_image).save(&#39;data/images/style/stylized.jpg&#39;) . content_path = &#39;data/images/style.jpg&#39; style_path = &#39;data/images/vdl.jpg&#39; content_image = load_img(content_path) style_image = load_img(style_path) plt.subplot(1, 2, 1) imshow(content_image, &#39;Content Image&#39;) plt.subplot(1, 2, 2) imshow(style_image, &#39;Style Image&#39;) . stylized_image = model(tf.constant(content_image), tf.constant(style_image))[0] tensor_to_image(stylized_image).save(&#39;data/images/style/ad5.jpg&#39;) .",
            "url": "https://riyadhuddin.github.io/mlbangla/python/jupyter/tensorflow/nft/ar/gan/2022/01/27/style_transfer.html",
            "relUrl": "/python/jupyter/tensorflow/nft/ar/gan/2022/01/27/style_transfer.html",
            "date": " • Jan 27, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Title",
            "content": "import pandas as pd import numpy as np import matplotlib.pyplot as plt . import tensorflow as tf . tf.__version__ . &#39;2.4.4&#39; . mnist = tf.keras.datasets.mnist . (x_train, y_train), (x_test, y_test) = mnist.load_data() x_train, x_test = x_train / 255.0, x_test / 255.0 . Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz 11493376/11490434 [==============================] - 3s 0us/step . model = tf.keras.models.Sequential([ tf.keras.layers.Flatten(input_shape=(28, 28)), tf.keras.layers.Dense(128, activation=&#39;relu&#39;), tf.keras.layers.Dropout(0.2), tf.keras.layers.Dense(10) ]) . predictions = model(x_train[:1]).numpy() predictions . array([[-0.76480716, -0.69049954, -0.6823444 , 0.09689973, 0.45827216, -0.23839718, 0.205401 , 0.18324575, -0.8623942 , 0.7430562 ]], dtype=float32) . tf.nn.softmax(predictions).numpy() . array([[0.04702776, 0.05065539, 0.05107019, 0.111324 , 0.15978311, 0.07961067, 0.12408244, 0.1213636 , 0.04265527, 0.21242763]], dtype=float32) . loss_fn = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True) . loss_fn(y_train[:1], predictions).numpy() . 2.5306072 . model.compile(optimizer=&#39;adam&#39;, loss=loss_fn, metrics=[&#39;accuracy&#39;]) . model.fit(x_train, y_train, epochs=5) . Epoch 1/5 1875/1875 [==============================] - 19s 10ms/step - loss: 0.4799 - accuracy: 0.8593 Epoch 2/5 1875/1875 [==============================] - 18s 10ms/step - loss: 0.1544 - accuracy: 0.9549 Epoch 3/5 1875/1875 [==============================] - 19s 10ms/step - loss: 0.1108 - accuracy: 0.9679 Epoch 4/5 1875/1875 [==============================] - 21s 11ms/step - loss: 0.0910 - accuracy: 0.9729 Epoch 5/5 1875/1875 [==============================] - 18s 10ms/step - loss: 0.0795 - accuracy: 0.9769 . &lt;tensorflow.python.keras.callbacks.History at 0x7fe1d51c7a00&gt; . model.evaluate(x_test, y_test, verbose=2) . 313/313 - 0s - loss: 0.0734 - accuracy: 0.9773 . [0.07342039048671722, 0.9772999882698059] . probability_model = tf.keras.Sequential([ model, tf.keras.layers.Softmax() ]) . probability_model(x_test[:5]) . &lt;tf.Tensor: shape=(5, 10), dtype=float32, numpy= array([[5.3325046e-08, 2.8153595e-08, 4.2096963e-05, 6.8184495e-04, 1.3434530e-11, 4.1878525e-07, 1.0231643e-12, 9.9927431e-01, 8.2829933e-07, 3.0515460e-07], [3.4997740e-08, 3.1513729e-04, 9.9952114e-01, 1.3690135e-04, 6.9117748e-13, 1.5989042e-05, 1.0965876e-07, 1.6409508e-10, 1.0669124e-05, 2.5090353e-12], [1.0889717e-06, 9.9809855e-01, 2.3320541e-04, 1.0303055e-05, 2.7063461e-05, 2.0977421e-05, 1.1688772e-05, 1.4193362e-03, 1.7755431e-04, 2.3787923e-07], [9.9992704e-01, 5.4899036e-08, 4.9432325e-05, 9.5224788e-09, 7.8594056e-09, 5.7956936e-07, 7.9628990e-06, 1.4436050e-05, 9.8185211e-08, 3.1363763e-07], [2.9442032e-05, 1.6279216e-07, 2.0743959e-05, 1.5505091e-06, 9.7020715e-01, 3.0978510e-06, 2.9673063e-05, 2.4832680e-04, 1.4960876e-05, 2.9444780e-02]], dtype=float32)&gt; . predictions = probability_model.predict(x_test) . predictions[0] . array([5.3324943e-08, 2.8153648e-08, 4.2096963e-05, 6.8184530e-04, 1.3434530e-11, 4.1878525e-07, 1.0231663e-12, 9.9927431e-01, 8.2829933e-07, 3.0515488e-07], dtype=float32) . np.argmax(predictions[0]) . 7 . x_test[0] . array([[0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0.32941176, 0.7254902 , 0.62352941, 0.59215686, 0.23529412, 0.14117647, 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0.87058824, 0.99607843, 0.99607843, 0.99607843, 0.99607843, 0.94509804, 0.77647059, 0.77647059, 0.77647059, 0.77647059, 0.77647059, 0.77647059, 0.77647059, 0.77647059, 0.66666667, 0.20392157, 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0.2627451 , 0.44705882, 0.28235294, 0.44705882, 0.63921569, 0.89019608, 0.99607843, 0.88235294, 0.99607843, 0.99607843, 0.99607843, 0.98039216, 0.89803922, 0.99607843, 0.99607843, 0.54901961, 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0.06666667, 0.25882353, 0.05490196, 0.2627451 , 0.2627451 , 0.2627451 , 0.23137255, 0.08235294, 0.9254902 , 0.99607843, 0.41568627, 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0.3254902 , 0.99215686, 0.81960784, 0.07058824, 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0.08627451, 0.91372549, 1. , 0.3254902 , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0.50588235, 0.99607843, 0.93333333, 0.17254902, 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0.23137255, 0.97647059, 0.99607843, 0.24313725, 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0.52156863, 0.99607843, 0.73333333, 0.01960784, 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0.03529412, 0.80392157, 0.97254902, 0.22745098, 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0.49411765, 0.99607843, 0.71372549, 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0.29411765, 0.98431373, 0.94117647, 0.22352941, 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0.0745098 , 0.86666667, 0.99607843, 0.65098039, 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0.01176471, 0.79607843, 0.99607843, 0.85882353, 0.1372549 , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0.14901961, 0.99607843, 0.99607843, 0.30196078, 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0.12156863, 0.87843137, 0.99607843, 0.45098039, 0.00392157, 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0.52156863, 0.99607843, 0.99607843, 0.20392157, 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0.23921569, 0.94901961, 0.99607843, 0.99607843, 0.20392157, 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0.4745098 , 0.99607843, 0.99607843, 0.85882353, 0.15686275, 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0.4745098 , 0.99607843, 0.81176471, 0.07058824, 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ], [0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. , 0. ]]) . def plot_image(i, predictions_array, true_label, img): true_label, img = true_label[i], img[i] plt.grid(False) plt.xticks([]) plt.yticks([]) plt.imshow(img, cmap=plt.cm.binary) predicted_label = np.argmax(predictions_array) if predicted_label == true_label: color = &#39;blue&#39; else: color = &#39;red&#39; plt.xlabel(&quot;{} {:2.0f}% ({})&quot;.format(class_names[predicted_label], 100*np.max(predictions_array), class_names[true_label]), color=color) def plot_value_array(i, predictions_array, true_label): true_label = true_label[i] plt.grid(False) plt.xticks(range(10)) plt.yticks([]) thisplot = plt.bar(range(10), predictions_array, color=&quot;#777777&quot;) plt.ylim([0, 1]) predicted_label = np.argmax(predictions_array) thisplot[predicted_label].set_color(&#39;red&#39;) thisplot[true_label].set_color(&#39;blue&#39;) . i = 0 plt.figure(figsize=(6,3)) plt.subplot(1,2,1) plot_image(i, predictions[i], y_test, x_test) plt.subplot(1,2,2) plot_value_array(i, predictions[i], y_test) plt.show() . class_names = [&#39;0&#39;,&#39;1&#39;,&#39;2&#39;,&#39;3&#39;,&#39;4&#39;,&#39;5&#39;,&#39;6&#39;,&#39;7&#39;,&#39;8&#39;,&#39;9&#39;] . i = 12 plt.figure(figsize=(6,3)) plt.subplot(1,2,1) plot_image(i, predictions[i], y_test, x_test) plt.subplot(1,2,2) plot_value_array(i, predictions[i], y_test) plt.show() . # Color correct predictions in blue and incorrect predictions in red. num_rows = 5 num_cols = 3 num_images = num_rows*num_cols plt.figure(figsize=(2*2*num_cols, 2*num_rows)) for i in range(num_images): plt.subplot(num_rows, 2*num_cols, 2*i+1) plot_image(i, predictions[i], y_test, x_test) plt.subplot(num_rows, 2*num_cols, 2*i+2) plot_value_array(i, predictions[i], y_test) plt.tight_layout() plt.show() . img = x_test[1] print(img.shape) . (28, 28) . img = (np.expand_dims(img,0)) print(img.shape) . (1, 28, 28) . predictions_single = probability_model.predict(img) print(predictions_single) . [[3.4997672e-08 3.1513697e-04 9.9952114e-01 1.3690122e-04 6.9117482e-13 1.5989011e-05 1.0965834e-07 1.6409508e-10 1.0669114e-05 2.5090353e-12]] . plot_value_array(1, predictions_single[0], y_test) _ = plt.xticks(range(10), class_names, rotation=45) plt.show() . np.argmax(predictions_single[0]) . 2 . import psutil psutil.cpu_percent() . 1.7 . psutil.virtual_memory() . svmem(total=1081514258432, available=1024321605632, percent=5.3, used=58597588992, free=935166513152, active=45286871040, inactive=63530778624, buffers=1191936, cached=87748964352, shared=403750912, slab=16187326464) . dict(psutil.virtual_memory()._asdict()) . {&#39;total&#39;: 1081514258432, &#39;available&#39;: 1024352935936, &#39;percent&#39;: 5.3, &#39;used&#39;: 58607460352, &#39;free&#39;: 935203512320, &#39;active&#39;: 45294034944, &#39;inactive&#39;: 63486967808, &#39;buffers&#39;: 1191936, &#39;cached&#39;: 87702093824, &#39;shared&#39;: 362569728, &#39;slab&#39;: 16186855424} . psutil.virtual_memory().percent . 5.3 . psutil.virtual_memory().available * 100 / psutil.virtual_memory().total . 94.71133232594397 . %pip install psutil . Collecting psutil Downloading psutil-5.9.0-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (283 kB) |████████████████████████████████| 283 kB 224 kB/s Installing collected packages: psutil Successfully installed psutil-5.9.0 Note: you may need to restart the kernel to use updated packages. . !nvidia-smi . /usr/bin/sh: nvidia-smi: command not found . import torch # setting device on GPU if available, else CPU device = torch.device(&#39;cuda&#39; if torch.cuda.is_available() else &#39;cpu&#39;) print(&#39;Using device:&#39;, device) print() #Additional Info when using cuda if device.type == &#39;cuda&#39;: print(torch.cuda.get_device_name(0)) print(&#39;Memory Usage:&#39;) print(&#39;Allocated:&#39;, round(torch.cuda.memory_allocated(0)/1024**3,1), &#39;GB&#39;) print(&#39;Cached: &#39;, round(torch.cuda.memory_cached(0)/1024**3,1), &#39;GB&#39;) . Using device: cpu . %pip install gputil #!pip install psutil %pip install humanize . Collecting gputil Downloading GPUtil-1.4.0.tar.gz (5.5 kB) Preparing metadata (setup.py) ... done Building wheels for collected packages: gputil Building wheel for gputil (setup.py) ... done Created wheel for gputil: filename=GPUtil-1.4.0-py3-none-any.whl size=7409 sha256=cf77cf2faaa4ecf68c03441e9e9d89060b18f71cf72273a6e36d9d2eced6a04e Stored in directory: /home/build/.cache/pip/wheels/ba/03/bb/7a97840eb54479b328672e15a536e49dc60da200fb21564d53 Successfully built gputil Installing collected packages: gputil Successfully installed gputil-1.4.0 Note: you may need to restart the kernel to use updated packages. Collecting humanize Downloading humanize-3.13.1-py3-none-any.whl (98 kB) |████████████████████████████████| 98 kB 298 kB/s Installing collected packages: humanize Successfully installed humanize-3.13.1 Note: you may need to restart the kernel to use updated packages. . import os,sys,humanize,psutil,GPUtil # Define function def mem_report(): print(&quot;CPU RAM Free: &quot; + humanize.naturalsize( psutil.virtual_memory().available )) GPUs = GPUtil.getGPUs() for i, gpu in enumerate(GPUs): print(&#39;GPU {:d} ... Mem Free: {:.0f}MB / {:.0f}MB | Utilization {:3.0f}%&#39;.format(i, gpu.memoryFree, gpu.memoryTotal, gpu.memoryUtil*100)) # Execute function # mem_report() . import torchvision.models as models wide_resnet50_2 = models.wide_resnet50_2(pretrained=True) if torch.cuda.is_available(): resnet18.cuda() mem_report() . Downloading: &#34;https://download.pytorch.org/models/wide_resnet50_2-95faca4d.pth&#34; to /home/build/.cache/torch/hub/checkpoints/wide_resnet50_2-95faca4d.pth . CPU RAM Free: 1.0 TB . %pip install ipyexperiments . Collecting ipyexperiments Downloading ipyexperiments-0.1.28-py3-none-any.whl (17 kB) Requirement already satisfied: ipython&gt;=6.0.0 in /opt/ov2021.4-venv/lib/python3.8/site-packages (from ipyexperiments) (7.30.1) Collecting pynvml Downloading pynvml-11.4.1-py3-none-any.whl (46 kB) |████████████████████████████████| 46 kB 200 kB/s Requirement already satisfied: psutil in /opt/ov2021.4-venv/lib/python3.8/site-packages (from ipyexperiments) (5.9.0) Requirement already satisfied: backcall in /opt/ov2021.4-venv/lib/python3.8/site-packages (from ipython&gt;=6.0.0-&gt;ipyexperiments) (0.2.0) Requirement already satisfied: decorator in /opt/ov2021.4-venv/lib/python3.8/site-packages (from ipython&gt;=6.0.0-&gt;ipyexperiments) (5.1.0) Requirement already satisfied: traitlets&gt;=4.2 in /opt/ov2021.4-venv/lib/python3.8/site-packages (from ipython&gt;=6.0.0-&gt;ipyexperiments) (5.1.1) Requirement already satisfied: setuptools&gt;=18.5 in /opt/ov2021.4-venv/lib/python3.8/site-packages (from ipython&gt;=6.0.0-&gt;ipyexperiments) (41.6.0) Requirement already satisfied: matplotlib-inline in /opt/ov2021.4-venv/lib/python3.8/site-packages (from ipython&gt;=6.0.0-&gt;ipyexperiments) (0.1.3) Requirement already satisfied: pygments in /opt/ov2021.4-venv/lib/python3.8/site-packages (from ipython&gt;=6.0.0-&gt;ipyexperiments) (2.10.0) Requirement already satisfied: pexpect&gt;4.3 in /opt/ov2021.4-venv/lib/python3.8/site-packages (from ipython&gt;=6.0.0-&gt;ipyexperiments) (4.8.0) Requirement already satisfied: jedi&gt;=0.16 in /opt/ov2021.4-venv/lib/python3.8/site-packages (from ipython&gt;=6.0.0-&gt;ipyexperiments) (0.17.2) Requirement already satisfied: pickleshare in /opt/ov2021.4-venv/lib/python3.8/site-packages (from ipython&gt;=6.0.0-&gt;ipyexperiments) (0.7.5) Requirement already satisfied: prompt-toolkit!=3.0.0,!=3.0.1,&lt;3.1.0,&gt;=2.0.0 in /opt/ov2021.4-venv/lib/python3.8/site-packages (from ipython&gt;=6.0.0-&gt;ipyexperiments) (3.0.24) Requirement already satisfied: parso&lt;0.8.0,&gt;=0.7.0 in /opt/ov2021.4-venv/lib/python3.8/site-packages (from jedi&gt;=0.16-&gt;ipython&gt;=6.0.0-&gt;ipyexperiments) (0.7.1) Requirement already satisfied: ptyprocess&gt;=0.5 in /opt/ov2021.4-venv/lib/python3.8/site-packages (from pexpect&gt;4.3-&gt;ipython&gt;=6.0.0-&gt;ipyexperiments) (0.7.0) Requirement already satisfied: wcwidth in /opt/ov2021.4-venv/lib/python3.8/site-packages (from prompt-toolkit!=3.0.0,!=3.0.1,&lt;3.1.0,&gt;=2.0.0-&gt;ipython&gt;=6.0.0-&gt;ipyexperiments) (0.2.5) Installing collected packages: pynvml, ipyexperiments Successfully installed ipyexperiments-0.1.28 pynvml-11.4.1 Note: you may need to restart the kernel to use updated packages. . from ipyexperiments import IPyExperimentsCPU . exp1 = IPyExperimentsCPU() . *** Experiment started with the CPU-only backend *** Current state: RAM: Used Free Total Util CPU: 1,521 976,422 1,031,412 MB 0.15% ･ RAM: △Consumed △Peaked Used Total | Exec time 0:00:00.000 ･ CPU: 0 0 1,521 MB | . %gpustat --debug . UsageError: Line magic function `%gpustat` not found. . exp1 = IPyExperimentsCPU() cpu_data = exp1.data.cpu exp2 = IPyExperimentsPytorch() cpu_data = exp2.data.cpu #gpu_data = exp2.data.gpu . *** Experiment started with the CPU-only backend *** Current state: RAM: Used Free Total Util CPU: 1,521 976,304 1,031,412 MB 0.15% ･ RAM: △Consumed △Peaked Used Total | Exec time 0:00:00.156 ･ CPU: 0 0 1,521 MB | IPyExperimentsCPU: Finishing *** Experiment finished in 00:00:11 (elapsed wallclock time) *** Experiment memory: RAM: Consumed Reclaimed CPU: 0 0 MB (100.00%) *** Current state: RAM: Used Free Total Util CPU: 1,521 976,304 1,031,412 MB 0.15% . OSError Traceback (most recent call last) /opt/ov2021.4-venv/lib64/python3.8/site-packages/pynvml/nvml.py in _LoadNvmlLibrary() 1477 # assume linux -&gt; 1478 nvmlLib = CDLL(&#34;libnvidia-ml.so.1&#34;) 1479 except OSError as ose: /usr/lib64/python3.8/ctypes/__init__.py in __init__(self, name, mode, handle, use_errno, use_last_error, winmode) 372 if handle is None: --&gt; 373 self._handle = _dlopen(self._name, mode) 374 else: OSError: libnvidia-ml.so.1: cannot open shared object file: No such file or directory During handling of the above exception, another exception occurred: NVMLError_LibraryNotFound Traceback (most recent call last) &lt;ipython-input-71-82103f8bd440&gt; in &lt;module&gt; 2 cpu_data = exp1.data.cpu 3 -&gt; 4 exp2 = IPyExperimentsPytorch() 5 cpu_data = exp2.data.cpu 6 #gpu_data = exp2.data.gpu /opt/ov2021.4-venv/lib64/python3.8/site-packages/ipyexperiments/ipyexperiments.py in __init__(self, **kwargs) 391 if self.__class__.__name__ == &#39;IPyExperimentsPytorch&#39;: 392 logger.debug(&#34;Starting IPyExperimentsPytorch&#34;) --&gt; 393 self.backend_init() 394 self.start() 395 /opt/ov2021.4-venv/lib64/python3.8/site-packages/ipyexperiments/ipyexperiments.py in backend_init(self) 395 396 def backend_init(self): --&gt; 397 super().backend_init() 398 399 print(&#34; n*** Experiment started with the Pytorch backend&#34;) /opt/ov2021.4-venv/lib64/python3.8/site-packages/ipyexperiments/ipyexperiments.py in backend_init(self) 363 from ipyexperiments.utils.pynvml_gate import load_pynvml_env 364 --&gt; 365 self.pynvml = load_pynvml_env() 366 367 #def start(self): /opt/ov2021.4-venv/lib64/python3.8/site-packages/ipyexperiments/utils/pynvml_gate.py in load_pynvml_env() 15 raise Exception(f&#34;{e} npynvx is required; pip install pynvx&#34;) 16 &gt; 17 pynvml.nvmlInit() 18 return pynvml /opt/ov2021.4-venv/lib64/python3.8/site-packages/pynvml/nvml.py in nvmlInit() 1448 1449 def nvmlInit(): -&gt; 1450 nvmlInitWithFlags(0) 1451 return None 1452 /opt/ov2021.4-venv/lib64/python3.8/site-packages/pynvml/nvml.py in nvmlInitWithFlags(flags) 1431 ## C function wrappers ## 1432 def nvmlInitWithFlags(flags): -&gt; 1433 _LoadNvmlLibrary() 1434 1435 # /opt/ov2021.4-venv/lib64/python3.8/site-packages/pynvml/nvml.py in _LoadNvmlLibrary() 1478 nvmlLib = CDLL(&#34;libnvidia-ml.so.1&#34;) 1479 except OSError as ose: -&gt; 1480 _nvmlCheckReturn(NVML_ERROR_LIBRARY_NOT_FOUND) 1481 if (nvmlLib == None): 1482 _nvmlCheckReturn(NVML_ERROR_LIBRARY_NOT_FOUND) /opt/ov2021.4-venv/lib64/python3.8/site-packages/pynvml/nvml.py in _nvmlCheckReturn(ret) 763 def _nvmlCheckReturn(ret): 764 if (ret != NVML_SUCCESS): --&gt; 765 raise NVMLError(ret) 766 return ret 767 NVMLError_LibraryNotFound: NVML Shared Library Not Found . ･ RAM: △Consumed △Peaked Used Total | Exec time 0:00:00.156 ･ CPU: 0 0 1,521 MB | . %tensorflow_version 2.x import tensorflow as tf device_name = tf.test.gpu_device_name() if device_name != &#39;/device:GPU:0&#39;: raise SystemError(&#39;GPU device not found&#39;) print(&#39;Found GPU at: {}&#39;.format(device_name)) . ･ RAM: △Consumed △Peaked Used Total | Exec time 0:00:00.000 ･ CPU: 0 0 1,521 MB | . UsageError: Line magic function `%tensorflow_version` not found. . %tensorflow_version 2.x import tensorflow as tf import timeit device_name = tf.test.gpu_device_name() if device_name != &#39;/device:GPU:0&#39;: print( &#39; n nThis error most likely means that this notebook is not &#39; &#39;configured to use a GPU. Change this in Notebook Settings via the &#39; &#39;command palette (cmd/ctrl-shift-P) or the Edit menu. n n&#39;) raise SystemError(&#39;GPU device not found&#39;) def cpu(): with tf.device(&#39;/cpu:0&#39;): random_image_cpu = tf.random.normal((100, 100, 100, 3)) net_cpu = tf.keras.layers.Conv2D(32, 7)(random_image_cpu) return tf.math.reduce_sum(net_cpu) def gpu(): with tf.device(&#39;/device:GPU:0&#39;): random_image_gpu = tf.random.normal((100, 100, 100, 3)) net_gpu = tf.keras.layers.Conv2D(32, 7)(random_image_gpu) return tf.math.reduce_sum(net_gpu) # We run each op once to warm up; see: https://stackoverflow.com/a/45067900 cpu() gpu() # Run the op several times. print(&#39;Time (s) to convolve 32x7x7x3 filter over random 100x100x100x3 images &#39; &#39;(batch x height x width x channel). Sum of ten runs.&#39;) print(&#39;CPU (s):&#39;) cpu_time = timeit.timeit(&#39;cpu()&#39;, number=10, setup=&quot;from __main__ import cpu&quot;) print(cpu_time) print(&#39;GPU (s):&#39;) gpu_time = timeit.timeit(&#39;gpu()&#39;, number=10, setup=&quot;from __main__ import gpu&quot;) print(gpu_time) print(&#39;GPU speedup over CPU: {}x&#39;.format(int(cpu_time/gpu_time))) . ･ RAM: △Consumed △Peaked Used Total | Exec time 0:00:00.000 ･ CPU: 0 0 1,521 MB | . UsageError: Line magic function `%tensorflow_version` not found. .",
            "url": "https://riyadhuddin.github.io/mlbangla/2022/01/04/openvion101.html",
            "relUrl": "/2022/01/04/openvion101.html",
            "date": " • Jan 4, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Covid-19 Year End 2021 Analysis",
            "content": "import pandas as pd import numpy as np import matplotlib.pyplot as plt import seaborn as sns . url_C = &#39;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv&#39; confirmed = pd.read_csv(url_C) url_D = &#39;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv&#39; death = pd.read_csv(url_D) url_R = &#39;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv&#39; recover = pd.read_csv(url_R) . confirmed.head(2) . Province/State Country/Region Lat Long 1/22/20 1/23/20 1/24/20 1/25/20 1/26/20 1/27/20 ... 12/21/21 12/22/21 12/23/21 12/24/21 12/25/21 12/26/21 12/27/21 12/28/21 12/29/21 12/30/21 . 0 NaN | Afghanistan | 33.93911 | 67.709953 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 157816 | 157841 | 157878 | 157887 | 157895 | 157951 | 157967 | 157998 | 158037 | 158056 | . 1 NaN | Albania | 41.15330 | 20.168300 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 206273 | 206616 | 206935 | 207221 | 207542 | 207709 | 207709 | 208352 | 208899 | 208899 | . 2 rows × 713 columns . death.head(2) . Province/State Country/Region Lat Long 1/22/20 1/23/20 1/24/20 1/25/20 1/26/20 1/27/20 ... 12/21/21 12/22/21 12/23/21 12/24/21 12/25/21 12/26/21 12/27/21 12/28/21 12/29/21 12/30/21 . 0 NaN | Afghanistan | 33.93911 | 67.709953 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 7335 | 7341 | 7346 | 7348 | 7349 | 7354 | 7354 | 7355 | 7356 | 7356 | . 1 NaN | Albania | 41.15330 | 20.168300 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 3178 | 3180 | 3181 | 3187 | 3189 | 3194 | 3194 | 3207 | 3212 | 3212 | . 2 rows × 713 columns . recover.head(2) . Province/State Country/Region Lat Long 1/22/20 1/23/20 1/24/20 1/25/20 1/26/20 1/27/20 ... 12/21/21 12/22/21 12/23/21 12/24/21 12/25/21 12/26/21 12/27/21 12/28/21 12/29/21 12/30/21 . 0 NaN | Afghanistan | 33.93911 | 67.709953 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 1 NaN | Albania | 41.15330 | 20.168300 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 2 rows × 713 columns . confirmed.info() . &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; RangeIndex: 280 entries, 0 to 279 Columns: 713 entries, Province/State to 12/30/21 dtypes: float64(2), int64(709), object(2) memory usage: 1.5+ MB . confirmed.describe() . Lat Long 1/22/20 1/23/20 1/24/20 1/25/20 1/26/20 1/27/20 1/28/20 1/29/20 ... 12/21/21 12/22/21 12/23/21 12/24/21 12/25/21 12/26/21 12/27/21 12/28/21 12/29/21 12/30/21 . count 278.000000 | 278.000000 | 280.000000 | 280.000000 | 280.000000 | 280.000000 | 280.000000 | 280.000000 | 280.000000 | 280.000000 | ... | 2.800000e+02 | 2.800000e+02 | 2.800000e+02 | 2.800000e+02 | 2.800000e+02 | 2.800000e+02 | 2.800000e+02 | 2.800000e+02 | 2.800000e+02 | 2.800000e+02 | . mean 20.156042 | 21.788955 | 1.989286 | 2.339286 | 3.360714 | 5.121429 | 7.564286 | 10.453571 | 19.921429 | 22.025000 | ... | 9.867638e+05 | 9.899810e+05 | 9.934898e+05 | 9.964687e+05 | 9.982992e+05 | 9.999857e+05 | 1.005308e+06 | 1.010000e+06 | 1.016181e+06 | 1.023357e+06 | . std 25.283318 | 76.200169 | 26.590143 | 26.687678 | 33.225879 | 46.244243 | 64.627991 | 87.077220 | 213.666694 | 214.980193 | ... | 4.159908e+06 | 4.173259e+06 | 4.187721e+06 | 4.200353e+06 | 4.204475e+06 | 4.213582e+06 | 4.241047e+06 | 4.261903e+06 | 4.289039e+06 | 4.323975e+06 | . min -51.796300 | -178.116500 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | ... | 0.000000e+00 | 0.000000e+00 | 0.000000e+00 | 0.000000e+00 | 0.000000e+00 | 0.000000e+00 | 0.000000e+00 | 0.000000e+00 | 0.000000e+00 | 0.000000e+00 | . 25% 4.643279 | -37.713675 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | ... | 3.206500e+03 | 3.221500e+03 | 3.235750e+03 | 3.377750e+03 | 3.517750e+03 | 3.675250e+03 | 3.676500e+03 | 3.700750e+03 | 3.754000e+03 | 3.838750e+03 | . 50% 21.517170 | 20.921188 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | ... | 4.612550e+04 | 4.620600e+04 | 4.623800e+04 | 4.623800e+04 | 4.623800e+04 | 4.631300e+04 | 4.673200e+04 | 4.685700e+04 | 4.707450e+04 | 4.707450e+04 | . 75% 40.393350 | 84.992575 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | ... | 4.542255e+05 | 4.551728e+05 | 4.560768e+05 | 4.569805e+05 | 4.577965e+05 | 4.582998e+05 | 4.589572e+05 | 4.603170e+05 | 4.617822e+05 | 4.631392e+05 | . max 71.706900 | 178.065000 | 444.000000 | 444.000000 | 549.000000 | 761.000000 | 1058.000000 | 1423.000000 | 3554.000000 | 3554.000000 | ... | 5.131243e+07 | 5.155348e+07 | 5.181482e+07 | 5.204195e+07 | 5.209891e+07 | 5.228085e+07 | 5.279341e+07 | 5.317042e+07 | 5.365969e+07 | 5.430676e+07 | . 8 rows × 711 columns . confirmed.shape . (280, 713) . confirmed.columns . Index([&#39;Province/State&#39;, &#39;Country/Region&#39;, &#39;Lat&#39;, &#39;Long&#39;, &#39;1/22/20&#39;, &#39;1/23/20&#39;, &#39;1/24/20&#39;, &#39;1/25/20&#39;, &#39;1/26/20&#39;, &#39;1/27/20&#39;, ... &#39;12/21/21&#39;, &#39;12/22/21&#39;, &#39;12/23/21&#39;, &#39;12/24/21&#39;, &#39;12/25/21&#39;, &#39;12/26/21&#39;, &#39;12/27/21&#39;, &#39;12/28/21&#39;, &#39;12/29/21&#39;, &#39;12/30/21&#39;], dtype=&#39;object&#39;, length=713) . confirmed.value_counts() . Province/State Country/Region Lat Long 1/22/20 1/23/20 1/24/20 1/25/20 1/26/20 1/27/20 1/28/20 1/29/20 1/30/20 1/31/20 2/1/20 2/2/20 2/3/20 2/4/20 2/5/20 2/6/20 2/7/20 2/8/20 2/9/20 2/10/20 2/11/20 2/12/20 2/13/20 2/14/20 2/15/20 2/16/20 2/17/20 2/18/20 2/19/20 2/20/20 2/21/20 2/22/20 2/23/20 2/24/20 2/25/20 2/26/20 2/27/20 2/28/20 2/29/20 3/1/20 3/2/20 3/3/20 3/4/20 3/5/20 3/6/20 3/7/20 3/8/20 3/9/20 3/10/20 3/11/20 3/12/20 3/13/20 3/14/20 3/15/20 3/16/20 3/17/20 3/18/20 3/19/20 3/20/20 3/21/20 3/22/20 3/23/20 3/24/20 3/25/20 3/26/20 3/27/20 3/28/20 3/29/20 3/30/20 3/31/20 4/1/20 4/2/20 4/3/20 4/4/20 4/5/20 4/6/20 4/7/20 4/8/20 4/9/20 4/10/20 4/11/20 4/12/20 4/13/20 4/14/20 4/15/20 4/16/20 4/17/20 4/18/20 4/19/20 4/20/20 4/21/20 4/22/20 4/23/20 4/24/20 4/25/20 4/26/20 4/27/20 4/28/20 4/29/20 4/30/20 5/1/20 5/2/20 5/3/20 5/4/20 5/5/20 5/6/20 5/7/20 5/8/20 5/9/20 5/10/20 5/11/20 5/12/20 5/13/20 5/14/20 5/15/20 5/16/20 5/17/20 5/18/20 5/19/20 5/20/20 5/21/20 5/22/20 5/23/20 5/24/20 5/25/20 5/26/20 5/27/20 5/28/20 5/29/20 5/30/20 5/31/20 6/1/20 6/2/20 6/3/20 6/4/20 6/5/20 6/6/20 6/7/20 6/8/20 6/9/20 6/10/20 6/11/20 6/12/20 6/13/20 6/14/20 6/15/20 6/16/20 6/17/20 6/18/20 6/19/20 6/20/20 6/21/20 6/22/20 6/23/20 6/24/20 6/25/20 6/26/20 6/27/20 6/28/20 6/29/20 6/30/20 7/1/20 7/2/20 7/3/20 7/4/20 7/5/20 7/6/20 7/7/20 7/8/20 7/9/20 7/10/20 7/11/20 7/12/20 7/13/20 7/14/20 7/15/20 7/16/20 7/17/20 7/18/20 7/19/20 7/20/20 7/21/20 7/22/20 7/23/20 7/24/20 7/25/20 7/26/20 7/27/20 7/28/20 7/29/20 7/30/20 7/31/20 8/1/20 8/2/20 8/3/20 8/4/20 8/5/20 8/6/20 8/7/20 8/8/20 8/9/20 8/10/20 8/11/20 8/12/20 8/13/20 8/14/20 8/15/20 8/16/20 8/17/20 8/18/20 8/19/20 8/20/20 8/21/20 8/22/20 8/23/20 8/24/20 8/25/20 8/26/20 8/27/20 8/28/20 8/29/20 8/30/20 8/31/20 9/1/20 9/2/20 9/3/20 9/4/20 9/5/20 9/6/20 9/7/20 9/8/20 9/9/20 9/10/20 9/11/20 9/12/20 9/13/20 9/14/20 9/15/20 9/16/20 9/17/20 9/18/20 9/19/20 9/20/20 9/21/20 9/22/20 9/23/20 9/24/20 9/25/20 9/26/20 9/27/20 9/28/20 9/29/20 9/30/20 10/1/20 10/2/20 10/3/20 10/4/20 10/5/20 10/6/20 10/7/20 10/8/20 10/9/20 10/10/20 10/11/20 10/12/20 10/13/20 10/14/20 10/15/20 10/16/20 10/17/20 10/18/20 10/19/20 10/20/20 10/21/20 10/22/20 10/23/20 10/24/20 10/25/20 10/26/20 10/27/20 10/28/20 10/29/20 10/30/20 10/31/20 11/1/20 11/2/20 11/3/20 11/4/20 11/5/20 11/6/20 11/7/20 11/8/20 11/9/20 11/10/20 11/11/20 11/12/20 11/13/20 11/14/20 11/15/20 11/16/20 11/17/20 11/18/20 11/19/20 11/20/20 11/21/20 11/22/20 11/23/20 11/24/20 11/25/20 11/26/20 11/27/20 11/28/20 11/29/20 11/30/20 12/1/20 12/2/20 12/3/20 12/4/20 12/5/20 12/6/20 12/7/20 12/8/20 12/9/20 12/10/20 12/11/20 12/12/20 12/13/20 12/14/20 12/15/20 12/16/20 12/17/20 12/18/20 12/19/20 12/20/20 12/21/20 12/22/20 12/23/20 12/24/20 12/25/20 12/26/20 12/27/20 12/28/20 12/29/20 12/30/20 12/31/20 1/1/21 1/2/21 1/3/21 1/4/21 1/5/21 1/6/21 1/7/21 1/8/21 1/9/21 1/10/21 1/11/21 1/12/21 1/13/21 1/14/21 1/15/21 1/16/21 1/17/21 1/18/21 1/19/21 1/20/21 1/21/21 1/22/21 1/23/21 1/24/21 1/25/21 1/26/21 1/27/21 1/28/21 1/29/21 1/30/21 1/31/21 2/1/21 2/2/21 2/3/21 2/4/21 2/5/21 2/6/21 2/7/21 2/8/21 2/9/21 2/10/21 2/11/21 2/12/21 2/13/21 2/14/21 2/15/21 2/16/21 2/17/21 2/18/21 2/19/21 2/20/21 2/21/21 2/22/21 2/23/21 2/24/21 2/25/21 2/26/21 2/27/21 2/28/21 3/1/21 3/2/21 3/3/21 3/4/21 3/5/21 3/6/21 3/7/21 3/8/21 3/9/21 3/10/21 3/11/21 3/12/21 3/13/21 3/14/21 3/15/21 3/16/21 3/17/21 3/18/21 3/19/21 3/20/21 3/21/21 3/22/21 3/23/21 3/24/21 3/25/21 3/26/21 3/27/21 3/28/21 3/29/21 3/30/21 3/31/21 4/1/21 4/2/21 4/3/21 4/4/21 4/5/21 4/6/21 4/7/21 4/8/21 4/9/21 4/10/21 4/11/21 4/12/21 4/13/21 4/14/21 4/15/21 4/16/21 4/17/21 4/18/21 4/19/21 4/20/21 4/21/21 4/22/21 4/23/21 4/24/21 4/25/21 4/26/21 4/27/21 4/28/21 4/29/21 4/30/21 5/1/21 5/2/21 5/3/21 5/4/21 5/5/21 5/6/21 5/7/21 5/8/21 5/9/21 5/10/21 5/11/21 5/12/21 5/13/21 5/14/21 5/15/21 5/16/21 5/17/21 5/18/21 5/19/21 5/20/21 5/21/21 5/22/21 5/23/21 5/24/21 5/25/21 5/26/21 5/27/21 5/28/21 5/29/21 5/30/21 5/31/21 6/1/21 6/2/21 6/3/21 6/4/21 6/5/21 6/6/21 6/7/21 6/8/21 6/9/21 6/10/21 6/11/21 6/12/21 6/13/21 6/14/21 6/15/21 6/16/21 6/17/21 6/18/21 6/19/21 6/20/21 6/21/21 6/22/21 6/23/21 6/24/21 6/25/21 6/26/21 6/27/21 6/28/21 6/29/21 6/30/21 7/1/21 7/2/21 7/3/21 7/4/21 7/5/21 7/6/21 7/7/21 7/8/21 7/9/21 7/10/21 7/11/21 7/12/21 7/13/21 7/14/21 7/15/21 7/16/21 7/17/21 7/18/21 7/19/21 7/20/21 7/21/21 7/22/21 7/23/21 7/24/21 7/25/21 7/26/21 7/27/21 7/28/21 7/29/21 7/30/21 7/31/21 8/1/21 8/2/21 8/3/21 8/4/21 8/5/21 8/6/21 8/7/21 8/8/21 8/9/21 8/10/21 8/11/21 8/12/21 8/13/21 8/14/21 8/15/21 8/16/21 8/17/21 8/18/21 8/19/21 8/20/21 8/21/21 8/22/21 8/23/21 8/24/21 8/25/21 8/26/21 8/27/21 8/28/21 8/29/21 8/30/21 8/31/21 9/1/21 9/2/21 9/3/21 9/4/21 9/5/21 9/6/21 9/7/21 9/8/21 9/9/21 9/10/21 9/11/21 9/12/21 9/13/21 9/14/21 9/15/21 9/16/21 9/17/21 9/18/21 9/19/21 9/20/21 9/21/21 9/22/21 9/23/21 9/24/21 9/25/21 9/26/21 9/27/21 9/28/21 9/29/21 9/30/21 10/1/21 10/2/21 10/3/21 10/4/21 10/5/21 10/6/21 10/7/21 10/8/21 10/9/21 10/10/21 10/11/21 10/12/21 10/13/21 10/14/21 10/15/21 10/16/21 10/17/21 10/18/21 10/19/21 10/20/21 10/21/21 10/22/21 10/23/21 10/24/21 10/25/21 10/26/21 10/27/21 10/28/21 10/29/21 10/30/21 10/31/21 11/1/21 11/2/21 11/3/21 11/4/21 11/5/21 11/6/21 11/7/21 11/8/21 11/9/21 11/10/21 11/11/21 11/12/21 11/13/21 11/14/21 11/15/21 11/16/21 11/17/21 11/18/21 11/19/21 11/20/21 11/21/21 11/22/21 11/23/21 11/24/21 11/25/21 11/26/21 11/27/21 11/28/21 11/29/21 11/30/21 12/1/21 12/2/21 12/3/21 12/4/21 12/5/21 12/6/21 12/7/21 12/8/21 12/9/21 12/10/21 12/11/21 12/12/21 12/13/21 12/14/21 12/15/21 12/16/21 12/17/21 12/18/21 12/19/21 12/20/21 12/21/21 12/22/21 12/23/21 12/24/21 12/25/21 12/26/21 12/27/21 12/28/21 12/29/21 12/30/21 Alberta Canada 53.9333 -116.5765 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 4 7 7 19 19 29 29 39 56 74 97 119 146 195 259 301 359 358 486 542 542 621 661 690 754 969 969 1075 1181 1250 1373 1373 1423 1451 1567 1567 1732 1870 1870 1996 2397 2562 2803 2908 3095 3401 3720 4017 4233 4480 4696 4850 5165 5355 5573 5670 5766 5836 5893 5963 6017 6098 6157 6253 6300 6345 6407 6457 6515 6587 6644 6683 6716 6735 6768 6800 6818 6860 6879 6901 6926 6955 6979 6992 7010 7044 7057 7076 7091 7098 7138 7138 7202 7229 7276 7316 7346 7383 7433 7453 7482 7530 7579 7625 7673 7704 7736 7781 7825 7851 7888 7957 7996 8067 8108 8108 8202 8259 8259 8259 8389 8436 8482 8519 8596 8596 8596 8826 8912 8994 9114 9219 9219 9219 9587 9728 9728 9975 10086 10086 10086 10390 10470 10603 10716 10843 10843 10843 10843 11146 11240 11296 11430 11430 11430 11687 11772 11893 11969 12053 12053 12053 12053 12419 12501 12501 12748 12748 12748 13006 13083 13210 13318 13476 13476 13476 13902 14066 14180 14310 14474 14474 14474 14474 15093 15093 15304 15415 15415 15415 15833 15957 16128 16274 16381 16381 16381 16739 16889 17032 17190 17343 17343 17343 17749 17909 18062 18235 18357 18357 18357 18935 19211 19354 19718 19995 19995 19995 19995 20956 21199 21443 21775 21775 21775 22673 22996 23402 23829 24261 24261 24261 25733 26155 26565 27042 27664 27664 27664 27664 29932 29932 30447 31858 32777 33504 34160 34873 35545 36405 37312 38338 39329 40189 40962 41692 42797 43952 45288 46872 48421 49536 50801 51878 53105 54836 56444 58177 59484 61169 63023 64851 66730 68566 70301 72028 73488 75054 76792 78382 80099 81986 83327 84597 86168 87581 88933 90219 91459 92480 93781 94788 95979 96893 97352 98269 99141 100428 100428 100428 100428 104228 105535 106378 107501 108469 109652 110641 111452 112091 112743 113618 114585 115370 116087 116837 117311 117767 118436 119114 119757 120330 120793 121535 121901 122360 122821 123364 123747 124208 124563 124831 125090 125672 126068 126416 126767 127036 127231 127570 127921 128235 128540 128824 129075 129338 129615 130030 130355 130735 131063 131336 131603 132033 132432 132788 133203 133504 133795 134052 134454 134785 135196 135537 135837 136119 136374 136773 137137 137562 138036 138424 138788 139143 139622 140127 140823 141379 141934 142390 142855 143547 144311 145028 145696 146340 146885 147461 148332 149207 149207 150307 150307 153194 154125 155476 156905 158426 159719 160902 162038 163119 164531 166177 167793 169279 170795 172186 173531 175230 177087 178777 180369 181806 183301 184840 186679 188727 190734 193167 194898 196910 198653 200924 203135 205115 207157 208790 210387 211836 213635 215193 216626 217821 218961 219682 220559 221467 222279 223011 223632 224195 224647 225034 225424 225937 226449 226855 227246 227509 227718 228128 228424 228668 228961 229192 229319 229458 229771 229949 230119 230298 230463 230578 230705 230858 231008 231132 231259 231359 231419 231476 231568 231641 231641 231641 231641 231850 231911 231987 231987 232097 232097 232097 232236 232269 232336 232359 232411 232411 232411 232501 232536 232582 232635 232676 232676 232676 232806 232875 232956 233062 233160 233160 233160 233547 233681 233875 234108 234295 234295 234295 234295 235038 235244 235641 236010 236010 236010 237027 237306 237807 238357 238939 238939 238939 240346 240753 241431 242248 242997 242997 242997 244969 245598 246674 247786 248954 248954 248954 252010 252930 254245 255584 256985 256985 256985 256985 261888 263054 264564 266037 266037 266037 270777 272211 273820 275538 277558 277558 277558 282191 283710 285046 286706 288357 288357 288357 293538 294784 296466 298172 299802 299802 299802 303839 304502 305765 307019 308275 308275 308275 308275 311633 312285 313201 314252 314252 314252 316433 316964 317750 318520 319176 319176 319176 320768 321210 321855 322386 322989 322989 322989 324199 324514 325001 325517 325983 325983 325983 327283 327705 328189 328189 329030 329030 329030 330098 330419 330831 331214 331626 331626 331626 332751 333004 333468 333847 334203 334203 334203 335009 335247 335677 336043 336392 336392 336392 337180 337420 337808 338141 338428 338428 338428 339291 339541 339997 340470 341023 341023 341023 342948 343734 345080 346705 346705 346705 346705 346705 346705 357623 361623 1 Nova Scotia Canada 44.6820 -63.7443 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 7 12 14 15 21 28 41 51 68 73 90 110 122 127 147 173 193 207 236 262 293 310 310 342 407 428 445 474 517 549 579 606 649 675 721 737 772 827 850 865 873 900 915 935 947 959 963 971 985 991 998 1007 1008 1011 1018 1019 1020 1024 1026 1034 1037 1040 1043 1044 1045 1046 1048 1049 1050 1051 1052 1053 1055 1055 1056 1056 1057 1057 1058 1058 1058 1058 1059 1059 1060 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1062 1063 1064 1064 1064 1064 1065 1065 1066 1066 1066 1066 1066 1066 1066 1067 1067 1067 1067 1067 1067 1067 1067 1067 1067 1067 1067 1067 1067 1067 1067 1069 1069 1071 1071 1071 1071 1071 1071 1071 1071 1071 1071 1071 1071 1072 1074 1074 1075 1075 1076 1077 1077 1078 1080 1080 1080 1081 1081 1083 1083 1083 1085 1085 1085 1085 1085 1085 1085 1086 1086 1086 1086 1086 1086 1086 1086 1086 1086 1086 1086 1086 1086 1086 1087 1087 1087 1087 1087 1087 1087 1087 1088 1088 1089 1089 1089 1089 1089 1089 1089 1089 1092 1092 1092 1092 1092 1092 1093 1093 1097 1097 1097 1097 1097 1097 1100 1100 1101 1102 1102 1102 1104 1109 1111 1113 1114 1118 1119 1121 1125 1128 1129 1132 1134 1134 1136 1142 1144 1146 1151 1154 1155 1160 1168 1179 1190 1227 1243 1257 1257 1257 1257 1305 1315 1332 1343 1358 1364 1368 1376 1383 1389 1393 1402 1409 1415 1420 1426 1430 1436 1443 1445 1445 1447 1454 1458 1465 1465 1465 1465 1478 1480 1483 1486 1486 1499 1499 1505 1508 1520 1524 1526 1529 1528 1533 1534 1542 1548 1550 1554 1558 1557 1561 1564 1565 1570 1570 1571 1571 1572 1576 1576 1577 1580 1580 1581 1582 1583 1584 1584 1584 1585 1586 1587 1588 1590 1590 1592 1593 1594 1597 1600 1602 1604 1608 1609 1610 1613 1616 1624 1634 1638 1641 1642 1643 1646 1649 1651 1657 1659 1659 1664 1665 1665 1666 1670 1670 1670 1672 1674 1677 1680 1682 1688 1690 1691 1696 1699 1704 1709 1711 1711 1714 1716 1719 1728 1732 1739 1742 1747 1749 1754 1756 1764 1768 1775 1781 1783 1786 1792 1800 1807 1822 1831 1856 1894 1938 1990 2053 2119 2215 2290 2360 2427 2575 2708 2854 3007 3182 3364 3591 3754 3919 4038 4152 4301 4407 4524 4610 4736 4827 4917 5000 5065 5149 5213 5286 5335 5389 5424 5457 5497 5530 5550 5567 5579 5595 5618 5633 5651 5663 5680 5694 5707 5721 5729 5736 5742 5749 5751 5759 5773 5784 5789 5791 5791 5793 5793 5798 5814 5825 5828 5831 5832 5836 5840 5842 5850 5853 5854 5861 5862 5864 5865 5866 5870 5871 5870 5870 5870 5870 5870 5873 5873 5873 5880 5880 5882 5882 5882 5883 5885 5885 5886 5887 5887 5887 5887 5893 5895 5899 5900 5900 5900 5907 5908 5911 5918 5920 5920 5920 5928 5929 5938 5946 5956 5956 5956 5956 5982 5989 5990 5999 5999 5999 6030 6031 6038 6042 6047 6047 6047 6047 6076 6090 6107 6117 6117 6117 6188 6254 6260 6294 6312 6312 6312 6367 6392 6411 6452 6486 6486 6486 6569 6598 6638 6638 6715 6715 6715 6800 6839 6864 6893 6918 6918 6918 6918 7011 7033 7059 7077 7077 7077 7077 7161 7166 7185 7208 7208 7208 7265 7272 7298 7328 7354 7354 7354 7413 7424 7462 7512 7550 7550 7550 7661 7717 7746 7746 7815 7815 7815 7913 7944 7963 7985 8012 8012 8012 8072 8100 8119 8141 8169 8169 8169 8227 8288 8322 8362 8381 8381 8381 8427 8427 8481 8532 8591 8591 8591 8790 8856 8968 9060 9202 9202 9202 9464 9607 9607 9795 9988 9988 9988 9988 9988 10094 10124 1 Saint Barthelemy France 17.9000 -62.8333 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 8 8 8 8 9 9 9 9 9 9 9 13 13 13 13 13 13 13 13 13 16 16 16 16 16 16 16 16 17 17 17 18 18 18 18 18 18 18 18 18 18 18 18 21 21 21 21 21 23 23 23 23 23 23 23 23 45 45 45 48 48 48 48 48 48 62 62 62 62 62 62 62 62 65 65 65 65 65 67 72 72 72 72 72 72 77 77 77 83 83 83 83 83 89 89 89 89 89 90 90 90 90 90 90 90 90 109 109 109 109 109 109 127 127 127 127 127 127 127 127 127 127 127 127 152 152 152 152 152 152 152 164 164 164 164 164 164 164 172 172 172 172 172 182 182 182 182 182 182 182 189 189 189 189 189 190 190 190 190 191 191 191 191 191 191 191 224 224 224 224 224 224 224 281 281 281 281 376 376 376 376 376 376 376 376 379 379 379 379 379 379 379 379 379 425 425 425 425 425 475 475 475 475 475 475 475 475 475 533 533 533 533 612 612 612 612 612 612 612 671 671 671 671 671 671 671 671 725 725 725 725 725 725 725 776 776 776 776 776 776 776 857 857 857 857 857 857 910 910 910 910 910 910 910 928 928 928 928 928 928 928 928 954 954 954 954 954 954 954 976 976 976 976 976 976 976 988 988 988 988 988 988 994 994 994 994 994 994 994 994 1010 1010 1010 1010 1010 1010 1010 1016 1016 1016 1016 1016 1016 1016 1023 1023 1023 1023 1023 1023 1023 1029 1029 1029 1029 1029 1029 1029 1032 1032 1032 1032 1032 1032 1032 1040 1040 1040 1040 1040 1040 1040 1043 1043 1043 1043 1043 1043 1043 1046 1046 1046 1046 1046 1046 1046 1052 1052 1052 1052 1052 1052 1057 1057 1057 1057 1057 1057 1057 1065 1065 1065 1065 1065 1065 1065 1221 1335 1335 1335 1335 1335 1335 1389 1399 1399 1453 1453 1453 1453 1453 1479 1479 1532 1532 1532 1532 1553 1553 1553 1553 1553 1553 1553 1592 1592 1592 1592 1592 1592 1592 1592 1592 1593 1593 1607 1607 1607 1607 1607 1607 1613 1613 1613 1613 1613 1613 1624 1624 1624 1624 1624 1624 1624 1624 1624 1634 1634 1634 1634 1634 1634 1634 1649 1649 1649 1649 1649 1649 1649 1658 1658 1658 1658 1658 1658 1659 1659 1659 1659 1659 1659 1659 1659 1659 1659 1659 1659 1659 1659 1659 1659 1660 1660 1660 1660 1660 1661 1661 1661 1661 1661 1661 1661 1661 1661 1661 1661 1661 1661 1666 1666 1666 1666 1666 1666 1666 1666 1672 1672 1672 1672 1672 1672 1674 1674 1674 1674 1674 1674 1674 1683 1683 1683 1683 1683 1683 1683 1683 1692 1692 1692 1692 1692 1692 1725 1726 1726 1895 1 Reunion France -21.1151 55.5364 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 5 6 7 9 9 12 14 28 45 64 71 94 111 135 145 183 183 224 247 281 308 321 334 344 349 358 358 362 382 388 389 391 391 391 394 402 407 408 408 410 410 412 412 417 417 418 418 420 420 422 423 423 424 424 425 427 426 431 436 436 437 439 440 441 443 443 446 446 447 449 449 452 452 456 459 460 465 470 471 471 473 477 478 479 480 480 480 481 481 486 487 488 489 495 496 495 497 502 504 505 506 507 507 508 516 517 520 521 522 526 528 531 533 536 547 550 551 563 566 571 577 593 596 599 608 612 614 624 628 631 639 645 646 654 657 657 657 657 657 657 660 664 667 667 669 670 671 675 681 687 690 702 734 754 776 816 855 880 903 903 996 1075 1117 1209 1244 1292 1372 1410 1487 1557 1634 1679 1714 1796 1912 2002 2115 2222 2277 2346 2416 2510 2623 2723 2805 2872 2902 3002 3099 3194 3194 3194 3415 3415 3501 3501 3685 3685 3685 3882 3882 3993 3993 4178 4178 4178 4328 4328 4385 4385 4491 4491 4491 4624 4624 4678 4678 4776 4776 4776 4921 4921 5015 5015 5149 5149 5149 5361 5361 5472 5472 5659 5659 5659 5898 5898 6037 6037 6264 6264 6264 6572 6572 6735 6735 6881 6881 6881 7161 7161 7298 7298 7501 7501 7501 7689 7689 7836 7836 7940 7940 7940 8054 8054 8102 8102 8200 8200 8200 8200 8294 8294 8345 8345 8345 8345 8345 8534 8534 8588 8588 8704 8704 8704 8801 8801 8846 8846 8909 8909 8909 8936 8972 8972 9037 9037 9037 9037 9118 9118 9173 9173 9247 9247 9359 9359 9359 9359 9406 9443 9443 9443 9552 9552 9584 9584 9701 9701 9701 9843 9843 9904 9904 9996 9996 9996 10194 10194 10330 10330 10487 10487 10487 10487 10487 10907 10907 10907 10907 10907 10907 10907 11562 11562 11562 11562 11562 11562 11562 12416 12416 12416 12416 12416 12416 13125 13125 13125 13125 13125 13125 13125 13125 13801 13801 13801 13801 13801 13801 14631 14631 14631 14631 14631 14631 14631 15561 15561 15561 15561 15561 15561 15561 16586 16586 16586 16586 16586 16586 16586 17508 17508 17508 17508 17508 17508 18425 18425 18425 18425 18425 18425 18425 18425 19343 19343 19343 19343 19343 19343 20381 20381 20381 20381 20381 20381 20381 20381 21451 21451 21451 21451 21451 21451 21451 22644 22644 22644 22644 22644 22644 22644 23566 23566 23566 23566 23566 23566 23566 24901 24901 24901 24901 24901 24901 24901 26075 26075 26075 26075 26075 26075 26075 27235 27235 27235 27235 27235 27235 27235 28441 28441 28441 28441 28441 28441 28441 29502 29502 29502 29502 29502 29502 30583 30583 30583 30583 30583 30583 30583 31845 31845 31845 31845 31845 31845 31845 31845 33295 33295 33295 33295 33295 33295 33295 34615 34615 34615 34615 34615 34615 34615 37231 37231 37231 37231 37231 37231 40245 40245 40245 40245 40245 40245 40245 40245 43835 43835 43835 43835 43835 43835 46754 46754 46754 46754 46754 46754 46754 46754 48683 48683 48683 48683 48683 48683 48683 50346 50346 50346 50346 50346 50346 50346 51651 51651 51651 51651 51651 51651 52643 52643 52643 52643 52643 52643 52643 53241 53241 53241 53241 53241 53241 53241 53241 53241 53241 53241 53241 53241 53241 53963 53963 53963 53963 53963 53963 53963 54024 54024 54024 54024 54024 54024 54024 54024 54024 54024 54438 54438 54438 54438 54438 54668 54668 54668 54668 54668 54668 54668 54668 55125 55125 55125 55125 55125 55125 55865 55865 55865 55865 55865 55865 55865 55865 57173 57173 57173 57173 57173 57173 59048 59048 59048 59048 59048 59048 61188 61188 61188 61188 61188 61188 61188 63863 63863 63863 63863 63863 63863 63863 67237 67237 67237 67237 67237 67237 67237 67237 67237 71795 71795 71795 71795 71795 71795 76602 76602 1 Queensland Australia -27.4698 153.0251 0 0 0 0 0 0 0 1 3 2 3 2 2 3 3 4 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 9 9 9 11 11 13 13 13 15 15 18 20 20 35 46 61 68 78 94 144 184 221 259 319 397 443 493 555 625 656 689 743 781 835 873 900 907 921 934 943 953 965 974 983 987 998 999 1001 1007 1015 1019 1019 1024 1024 1026 1026 1026 1030 1033 1034 1033 1033 1034 1035 1038 1043 1043 1045 1045 1045 1045 1045 1051 1052 1051 1054 1055 1055 1057 1057 1058 1058 1058 1060 1061 1056 1057 1058 1058 1058 1058 1058 1058 1059 1059 1060 1060 1061 1061 1062 1062 1062 1063 1064 1065 1065 1065 1065 1066 1066 1066 1066 1066 1066 1066 1066 1066 1067 1067 1067 1067 1067 1067 1067 1067 1067 1067 1067 1068 1068 1068 1068 1070 1070 1071 1071 1071 1071 1071 1071 1071 1072 1072 1073 1074 1076 1076 1076 1076 1076 1078 1082 1083 1084 1085 1085 1085 1088 1088 1087 1088 1088 1089 1089 1089 1089 1091 1091 1091 1091 1091 1092 1093 1094 1103 1105 1106 1106 1107 1110 1113 1117 1121 1122 1124 1126 1128 1128 1129 1131 1133 1134 1143 1143 1145 1149 1149 1149 1150 1149 1150 1150 1150 1152 1153 1153 1153 1153 1153 1156 1157 1157 1157 1157 1157 1160 1160 1160 1160 1160 1160 1160 1160 1161 1161 1161 1161 1161 1162 1164 1164 1164 1164 1164 1165 1165 1167 1167 1167 1167 1167 1169 1169 1172 1171 1172 1172 1175 1177 1177 1177 1177 1177 1177 1178 1179 1182 1183 1185 1185 1185 1186 1187 1190 1190 1192 1193 1196 1197 1197 1197 1198 1199 1201 1201 1202 1205 1206 1208 1210 1212 1215 1221 1221 1225 1224 1226 1226 1227 1228 1229 1230 1233 1232 1234 1235 1235 1236 1238 1240 1241 1241 1246 1248 1250 1253 1253 1255 1255 1260 1262 1263 1265 1274 1274 1274 1278 1281 1283 1287 1290 1291 1293 1294 1297 1299 1300 1303 1303 1303 1305 1305 1306 1307 1308 1309 1309 1310 1311 1311 1311 1309 1311 1312 1314 1315 1316 1317 1318 1320 1320 1320 1320 1320 1320 1321 1321 1321 1323 1323 1323 1324 1328 1329 1329 1331 1335 1335 1342 1344 1347 1349 1356 1362 1367 1373 1375 1379 1380 1386 1388 1394 1402 1411 1415 1417 1421 1422 1426 1429 1436 1443 1446 1456 1466 1467 1477 1485 1488 1489 1492 1491 1497 1500 1501 1502 1502 1504 1506 1508 1509 1515 1516 1518 1518 1518 1519 1520 1524 1525 1529 1531 1534 1550 1554 1559 1561 1564 1567 1568 1568 1571 1573 1576 1580 1580 1580 1583 1585 1585 1586 1589 1589 1591 1592 1592 1595 1597 1597 1605 1607 1611 1613 1615 1616 1618 1618 1618 1619 1621 1621 1630 1632 1632 1633 1634 1642 1642 1642 1650 1652 1655 1655 1661 1664 1664 1665 1670 1673 1674 1678 1679 1680 1683 1686 1690 1696 1700 1705 1714 1715 1723 1728 1729 1732 1732 1737 1738 1739 1742 1747 1752 1753 1754 1755 1757 1761 1761 1761 1764 1763 1770 1771 1770 1790 1791 1793 1800 1809 1824 1840 1859 1886 1896 1909 1918 1923 1926 1929 1940 1948 1955 1956 1955 1957 1961 1961 1962 1964 1964 1966 1972 1972 1972 1973 1977 1977 1979 1979 1980 1982 1982 1984 1985 1991 1991 1991 1992 1995 2002 2003 2007 2009 2010 2013 2014 2015 2015 2017 2018 2019 2021 2021 2022 2022 2022 2028 2029 2035 2039 2042 2043 2046 2048 2051 2056 2056 2059 2062 2063 2067 2067 2067 2068 2071 2071 2071 2071 2072 2077 2082 2082 2082 2082 2085 2086 2087 2089 2089 2089 2090 2090 2089 2092 2094 2095 2098 2098 2099 2102 2105 2109 2106 2106 2109 2110 2110 2111 2112 2112 2112 2112 2113 2115 2117 2116 2117 2120 2125 2127 2130 2133 2139 2146 2152 2155 2155 2157 2157 2165 2167 2168 2176 2180 2188 2210 2227 2258 2297 2356 2442 2613 2977 2977 3563 4322 5033 6961 8534 10752 10752 1 .. Guangxi China 23.8298 108.7881 2 5 23 23 36 46 51 58 78 87 100 111 127 139 150 168 172 183 195 210 215 222 222 226 235 237 238 242 244 245 246 249 249 251 252 252 252 252 252 252 252 252 252 252 252 252 252 252 252 252 252 252 252 252 252 253 253 253 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 257 257 257 257 257 257 257 257 257 258 258 258 258 258 258 258 258 258 258 258 259 259 259 259 259 259 259 259 259 259 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 262 262 262 263 263 263 263 263 263 263 263 263 263 263 263 263 263 263 263 263 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 265 266 266 266 266 266 266 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 270 270 270 270 270 270 270 270 270 270 270 270 270 270 270 270 270 270 270 270 271 274 274 274 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 276 276 276 276 276 276 276 276 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 280 287 287 287 287 289 289 289 289 289 289 289 289 289 289 289 289 289 289 289 290 290 290 290 290 291 291 291 291 292 292 292 292 292 292 292 292 292 295 297 297 297 297 297 298 298 298 298 298 298 298 298 298 299 299 301 301 301 304 305 306 306 314 316 317 317 320 320 320 320 320 323 325 326 327 329 330 331 334 335 338 339 340 341 346 349 349 350 351 355 358 359 360 361 362 362 362 362 366 367 372 373 379 381 386 390 391 393 395 396 400 401 409 413 416 417 426 439 447 456 463 478 486 490 497 499 499 506 516 523 537 540 547 554 558 568 575 593 599 605 610 613 1 Guangdong China 23.3417 113.4244 26 32 53 78 111 151 207 277 354 436 535 632 725 813 895 970 1034 1095 1131 1159 1177 1219 1241 1261 1294 1316 1322 1328 1331 1332 1333 1339 1342 1345 1347 1347 1347 1348 1349 1349 1350 1350 1350 1351 1352 1352 1352 1352 1353 1356 1356 1356 1356 1360 1361 1364 1370 1378 1395 1400 1413 1415 1428 1433 1448 1456 1467 1475 1484 1494 1501 1507 1514 1516 1524 1532 1533 1536 1539 1544 1548 1552 1555 1564 1566 1571 1577 1579 1580 1581 1582 1582 1585 1585 1586 1587 1587 1588 1588 1588 1588 1588 1588 1588 1588 1589 1589 1589 1589 1589 1589 1589 1589 1589 1589 1590 1590 1590 1590 1590 1590 1591 1592 1592 1592 1592 1592 1592 1593 1593 1595 1596 1597 1598 1598 1601 1602 1602 1604 1604 1607 1607 1608 1625 1625 1628 1628 1628 1631 1631 1634 1634 1634 1634 1635 1635 1637 1637 1637 1641 1641 1642 1642 1643 1643 1643 1643 1645 1647 1647 1647 1648 1650 1650 1650 1650 1654 1657 1659 1659 1659 1661 1662 1667 1669 1672 1672 1672 1674 1675 1678 1680 1682 1683 1687 1687 1687 1687 1688 1693 1696 1699 1699 1707 1707 1709 1712 1720 1721 1725 1725 1725 1725 1727 1727 1730 1734 1734 1735 1737 1738 1739 1740 1742 1745 1758 1760 1763 1767 1769 1769 1770 1774 1776 1777 1778 1782 1783 1784 1787 1793 1797 1800 1803 1807 1807 1809 1812 1814 1819 1819 1827 1827 1831 1834 1840 1841 1846 1848 1848 1851 1852 1858 1861 1863 1869 1873 1875 1877 1881 1884 1889 1892 1895 1895 1904 1907 1908 1909 1911 1914 1916 1919 1922 1927 1935 1938 1938 1941 1943 1945 1949 1955 1955 1956 1956 1963 1966 1968 1971 1972 1973 1975 1975 1975 1979 1983 1984 1988 1988 1988 1988 1989 1989 1992 1996 1997 2000 2002 2004 2007 2009 2010 2013 2015 2016 2017 2018 2021 2022 2026 2027 2028 2031 2034 2035 2036 2037 2038 2038 2039 2040 2041 2044 2046 2046 2051 2053 2057 2060 2062 2065 2067 2068 2075 2076 2078 2081 2084 2084 2086 2087 2090 2093 2094 2098 2099 2104 2106 2108 2115 2116 2121 2121 2124 2125 2127 2129 2132 2134 2135 2137 2144 2151 2151 2152 2154 2157 2159 2163 2171 2177 2180 2180 2183 2184 2187 2196 2196 2198 2200 2205 2206 2212 2215 2218 2221 2222 2225 2229 2233 2235 2236 2238 2240 2243 2244 2245 2245 2245 2246 2249 2251 2252 2253 2257 2259 2263 2265 2266 2267 2275 2277 2279 2282 2282 2285 2287 2287 2289 2290 2291 2295 2295 2296 2299 2301 2304 2308 2310 2313 2317 2319 2319 2320 2322 2327 2328 2328 2329 2331 2334 2335 2337 2344 2350 2354 2358 2359 2360 2365 2365 2370 2372 2373 2381 2383 2386 2387 2392 2396 2397 2398 2399 2400 2406 2409 2412 2412 2413 2427 2428 2431 2432 2455 2468 2481 2498 2509 2525 2534 2542 2564 2573 2582 2593 2605 2618 2625 2635 2650 2657 2666 2680 2692 2699 2706 2709 2717 2723 2727 2728 2733 2736 2737 2737 2745 2748 2751 2756 2759 2764 2766 2769 2770 2770 2774 2777 2779 2791 2795 2796 2800 2808 2812 2812 2820 2834 2839 2845 2853 2866 2869 2872 2881 2882 2884 2886 2892 2894 2896 2909 2912 2915 2923 2931 2933 2938 2947 2950 2963 2968 2977 2978 2988 2997 3001 3007 3012 3020 3023 3032 3040 3043 3046 3055 3059 3065 3074 3079 3083 3087 3094 3096 3100 3104 3109 3111 3117 3120 3128 3132 3135 3137 3140 3142 3142 3145 3147 3149 3150 3159 3163 3164 3167 3168 3171 3177 3180 3183 3187 3191 3191 3191 3193 3193 3193 3195 3195 3197 3199 3199 3199 3199 3201 3204 3207 3208 3209 3210 3211 3211 3215 3217 3217 3221 3223 3224 3224 3226 3230 3233 3234 3237 3240 3243 3247 3248 3249 3251 3252 3253 3257 3259 3260 3264 3267 3269 3272 3274 3279 3281 3285 3291 3294 3297 3301 3310 3314 3315 3318 3322 3323 3324 3327 3330 3333 3333 3333 3334 3339 3343 3347 3353 3359 3366 3374 3384 3394 3399 3408 3413 3419 3421 3427 3429 3433 3443 3446 1 Guadeloupe France 16.2650 -61.5510 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 3 6 18 27 33 45 53 58 62 62 73 73 73 102 106 106 114 125 128 130 134 135 135 139 141 141 143 143 143 143 145 145 145 145 148 148 148 148 148 148 149 149 149 149 149 149 151 152 152 152 152 152 152 153 154 154 154 154 155 155 155 155 155 155 155 155 155 155 156 156 161 161 161 161 161 162 162 162 162 162 162 162 164 164 164 164 164 164 164 171 171 171 171 171 171 171 174 174 174 174 174 174 174 182 182 182 182 182 182 182 184 184 184 184 184 184 184 190 190 190 190 190 190 190 195 195 195 195 195 195 195 203 203 203 203 203 244 244 265 265 265 272 272 279 279 290 290 290 317 317 367 367 446 446 446 510 510 510 510 771 771 771 771 935 935 935 1145 1145 1145 1269 1269 1363 1363 1363 1363 1363 1363 1363 2287 2287 2287 3080 3080 3080 3080 3426 3426 3426 3426 3426 3426 3426 4487 4487 4487 4487 4487 4487 4487 5528 5528 5528 5528 5528 5528 6319 6319 6319 6483 6483 6483 6483 6908 6908 6908 7122 7122 7122 7122 7329 7329 7329 7329 7329 7329 7474 7474 7605 7605 7605 7605 7605 7605 7903 7903 7903 7903 7903 7903 7903 8098 8098 8098 8098 8098 8098 8098 8225 8225 8225 8225 8225 8225 8225 8344 8344 8344 8344 8344 8344 8344 8427 8427 8427 8427 8427 8427 8427 8451 8451 8451 8451 8451 8451 8451 8498 8498 8498 8498 8498 8557 8557 8557 8557 8557 8557 8557 8620 8620 8620 8620 8620 8620 8620 8620 8620 8702 8702 8702 8702 8702 8702 8702 8834 8834 8834 8834 8834 8834 8834 8948 8948 8948 8948 9056 9056 9056 9056 9056 9056 9056 9056 9156 9156 9156 9156 9156 9156 9156 9156 9156 9302 9302 9302 9302 9302 9302 9302 9351 9455 9455 9455 9455 9455 9455 9610 9610 9610 9610 9968 9968 9968 9968 9968 9968 9968 10458 10458 10458 10458 10458 10458 10458 10458 10725 10725 10725 10725 10725 10725 10725 11095 11095 11095 11095 11095 11095 11095 11512 11512 11512 11512 11512 11512 11890 11890 11890 11890 11890 11890 11890 12304 12304 12304 12304 12304 12304 12304 12304 12927 12927 12927 12927 12927 12927 12927 12927 13770 13770 13770 13770 13770 13770 14634 14634 14634 14634 14634 14634 15429 15429 15429 15429 15429 15429 15429 15429 15429 15429 16079 16079 16079 16079 16079 16517 16517 16517 16517 16517 16517 16517 16874 16874 16874 16874 16874 16874 16874 17108 17108 17108 17108 17108 17108 17108 17288 17288 17288 17288 17288 17288 17288 17288 17427 17427 17427 17427 17427 17427 17427 17427 17539 17539 17539 17539 17539 17539 17684 17684 17684 17684 17684 17684 17684 17809 17809 17809 17809 17809 17809 17809 17982 17982 17982 17982 17982 17982 17982 18313 18313 18313 18313 18313 18313 18313 21125 21125 21125 21125 21125 21125 21125 21125 26771 26771 26771 26771 26771 26771 29760 35283 35283 35283 35283 35283 35283 37955 37955 37955 37955 37955 37955 37955 45393 45393 45393 45393 45393 45393 45393 45471 45471 49515 49515 49515 49515 49515 49515 51485 51485 51485 51485 51485 51485 52463 52463 52463 52463 53140 53140 53140 53140 53140 53106 53106 53106 53106 53106 53106 53544 53544 53544 53544 53544 53544 53544 53544 53836 53836 53836 53836 53836 53836 54095 54095 54095 54095 54095 54095 54095 54288 54288 54288 54288 54288 54288 54288 54288 54288 54474 54474 54474 54474 54474 54672 54672 54672 54672 54672 54672 54854 54854 54854 54854 54854 54854 54854 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55375 55375 55375 55375 55375 55375 55375 55375 55564 55564 55564 55564 55564 55564 55625 55795 55795 55795 1 Greenland Denmark 71.7069 -42.6043 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 2 2 2 4 4 5 6 6 10 10 10 10 10 10 10 10 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 12 12 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 15 15 16 16 16 16 16 16 16 16 16 16 16 16 16 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 19 19 19 19 19 19 19 19 19 19 19 19 19 25 25 25 25 26 26 26 26 26 27 27 27 27 27 27 28 28 27 29 29 29 29 29 29 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 34 34 34 34 34 34 34 34 36 36 37 40 40 40 40 40 40 43 43 43 43 43 43 43 44 44 44 49 49 49 49 49 49 49 50 50 50 50 50 50 50 50 50 50 50 50 50 51 51 51 51 51 52 55 55 64 65 65 69 72 78 81 83 83 84 85 89 92 92 92 108 117 118 119 122 122 130 135 151 160 168 175 182 187 201 221 235 245 245 249 257 273 285 296 298 298 305 310 313 318 329 329 333 333 334 343 347 347 349 353 353 360 377 377 382 390 395 395 409 433 441 454 464 464 469 504 528 541 553 553 565 565 571 573 576 584 584 591 591 595 600 601 620 623 623 623 630 638 645 654 654 654 654 688 700 716 731 731 731 746 772 779 787 799 799 799 810 823 835 846 859 859 859 882 922 963 982 990 990 990 1039 1070 1095 1116 1129 1129 1129 1188 1292 1311 1311 1332 1332 1332 1456 1456 1456 1542 1582 1582 1582 1621 1663 1746 1774 1774 1813 1831 1876 1876 1917 1937 1969 1969 1969 1969 1969 2182 2249 2249 2249 2249 2306 2437 2437 2610 1 Zhejiang China 29.1832 120.0934 10 27 43 62 104 128 173 296 428 538 599 661 724 829 895 954 1006 1048 1075 1092 1117 1131 1145 1155 1162 1167 1171 1172 1174 1175 1203 1205 1205 1205 1205 1205 1205 1205 1205 1205 1206 1213 1213 1215 1215 1215 1215 1215 1215 1215 1215 1215 1227 1231 1231 1232 1232 1233 1234 1236 1238 1238 1240 1241 1243 1247 1251 1254 1255 1257 1257 1258 1260 1262 1263 1264 1265 1266 1267 1267 1267 1267 1267 1267 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1271 1272 1273 1274 1275 1275 1275 1275 1275 1275 1275 1277 1277 1277 1277 1277 1277 1277 1277 1277 1277 1277 1277 1278 1278 1278 1278 1278 1278 1278 1278 1278 1278 1278 1278 1278 1280 1280 1281 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1286 1286 1286 1287 1287 1287 1288 1288 1290 1290 1291 1291 1291 1291 1291 1291 1291 1291 1291 1292 1292 1292 1293 1293 1293 1293 1293 1293 1294 1294 1294 1294 1294 1294 1294 1294 1294 1295 1295 1295 1295 1295 1296 1296 1297 1297 1297 1297 1297 1298 1299 1299 1299 1300 1300 1300 1300 1302 1305 1305 1306 1306 1306 1306 1306 1306 1306 1306 1306 1306 1306 1308 1308 1308 1308 1308 1309 1309 1309 1311 1314 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1317 1320 1320 1320 1320 1320 1320 1320 1320 1320 1320 1320 1320 1320 1320 1321 1321 1321 1321 1321 1321 1321 1321 1322 1322 1322 1322 1322 1322 1322 1322 1322 1322 1322 1322 1322 1322 1322 1322 1323 1323 1323 1323 1323 1323 1323 1323 1323 1323 1323 1323 1323 1323 1323 1323 1324 1324 1324 1324 1324 1325 1325 1325 1327 1327 1327 1327 1328 1328 1328 1329 1329 1329 1331 1331 1331 1331 1332 1332 1343 1343 1344 1344 1344 1344 1344 1344 1344 1345 1345 1346 1346 1347 1347 1347 1347 1347 1355 1356 1356 1361 1361 1361 1362 1362 1362 1363 1363 1363 1364 1364 1364 1364 1364 1364 1365 1365 1366 1368 1368 1368 1369 1370 1370 1372 1372 1373 1373 1373 1376 1377 1379 1379 1383 1383 1383 1384 1385 1385 1385 1386 1386 1386 1386 1386 1386 1386 1386 1386 1386 1386 1386 1386 1386 1386 1386 1388 1390 1392 1392 1393 1393 1393 1393 1393 1393 1393 1393 1393 1393 1393 1393 1395 1396 1396 1396 1398 1398 1398 1399 1399 1400 1400 1412 1412 1412 1412 1412 1417 1417 1417 1418 1418 1420 1420 1421 1428 1428 1429 1429 1429 1429 1430 1430 1431 1432 1433 1437 1437 1437 1438 1438 1439 1439 1439 1439 1439 1439 1440 1441 1442 1442 1442 1444 1446 1446 1446 1446 1446 1446 1447 1447 1447 1448 1448 1449 1449 1450 1450 1450 1451 1451 1451 1452 1452 1452 1453 1454 1454 1456 1457 1457 1457 1457 1457 1457 1457 1465 1465 1465 1465 1473 1475 1479 1483 1492 1495 1496 1496 1496 1496 1496 1497 1497 1497 1497 1498 1499 1499 1499 1500 1500 1500 1500 1500 1500 1501 1501 1501 1501 1501 1501 1501 1501 1501 1501 1501 1501 1501 1501 1501 1502 1510 1522 1528 1563 1601 1676 1721 1767 1823 1867 1944 1975 1987 1998 1999 2001 2002 2003 2004 2006 2008 2012 2015 2016 1 Length: 85, dtype: int64 . confirmed.value_counts(normalize=True) . Province/State Country/Region Lat Long 1/22/20 1/23/20 1/24/20 1/25/20 1/26/20 1/27/20 1/28/20 1/29/20 1/30/20 1/31/20 2/1/20 2/2/20 2/3/20 2/4/20 2/5/20 2/6/20 2/7/20 2/8/20 2/9/20 2/10/20 2/11/20 2/12/20 2/13/20 2/14/20 2/15/20 2/16/20 2/17/20 2/18/20 2/19/20 2/20/20 2/21/20 2/22/20 2/23/20 2/24/20 2/25/20 2/26/20 2/27/20 2/28/20 2/29/20 3/1/20 3/2/20 3/3/20 3/4/20 3/5/20 3/6/20 3/7/20 3/8/20 3/9/20 3/10/20 3/11/20 3/12/20 3/13/20 3/14/20 3/15/20 3/16/20 3/17/20 3/18/20 3/19/20 3/20/20 3/21/20 3/22/20 3/23/20 3/24/20 3/25/20 3/26/20 3/27/20 3/28/20 3/29/20 3/30/20 3/31/20 4/1/20 4/2/20 4/3/20 4/4/20 4/5/20 4/6/20 4/7/20 4/8/20 4/9/20 4/10/20 4/11/20 4/12/20 4/13/20 4/14/20 4/15/20 4/16/20 4/17/20 4/18/20 4/19/20 4/20/20 4/21/20 4/22/20 4/23/20 4/24/20 4/25/20 4/26/20 4/27/20 4/28/20 4/29/20 4/30/20 5/1/20 5/2/20 5/3/20 5/4/20 5/5/20 5/6/20 5/7/20 5/8/20 5/9/20 5/10/20 5/11/20 5/12/20 5/13/20 5/14/20 5/15/20 5/16/20 5/17/20 5/18/20 5/19/20 5/20/20 5/21/20 5/22/20 5/23/20 5/24/20 5/25/20 5/26/20 5/27/20 5/28/20 5/29/20 5/30/20 5/31/20 6/1/20 6/2/20 6/3/20 6/4/20 6/5/20 6/6/20 6/7/20 6/8/20 6/9/20 6/10/20 6/11/20 6/12/20 6/13/20 6/14/20 6/15/20 6/16/20 6/17/20 6/18/20 6/19/20 6/20/20 6/21/20 6/22/20 6/23/20 6/24/20 6/25/20 6/26/20 6/27/20 6/28/20 6/29/20 6/30/20 7/1/20 7/2/20 7/3/20 7/4/20 7/5/20 7/6/20 7/7/20 7/8/20 7/9/20 7/10/20 7/11/20 7/12/20 7/13/20 7/14/20 7/15/20 7/16/20 7/17/20 7/18/20 7/19/20 7/20/20 7/21/20 7/22/20 7/23/20 7/24/20 7/25/20 7/26/20 7/27/20 7/28/20 7/29/20 7/30/20 7/31/20 8/1/20 8/2/20 8/3/20 8/4/20 8/5/20 8/6/20 8/7/20 8/8/20 8/9/20 8/10/20 8/11/20 8/12/20 8/13/20 8/14/20 8/15/20 8/16/20 8/17/20 8/18/20 8/19/20 8/20/20 8/21/20 8/22/20 8/23/20 8/24/20 8/25/20 8/26/20 8/27/20 8/28/20 8/29/20 8/30/20 8/31/20 9/1/20 9/2/20 9/3/20 9/4/20 9/5/20 9/6/20 9/7/20 9/8/20 9/9/20 9/10/20 9/11/20 9/12/20 9/13/20 9/14/20 9/15/20 9/16/20 9/17/20 9/18/20 9/19/20 9/20/20 9/21/20 9/22/20 9/23/20 9/24/20 9/25/20 9/26/20 9/27/20 9/28/20 9/29/20 9/30/20 10/1/20 10/2/20 10/3/20 10/4/20 10/5/20 10/6/20 10/7/20 10/8/20 10/9/20 10/10/20 10/11/20 10/12/20 10/13/20 10/14/20 10/15/20 10/16/20 10/17/20 10/18/20 10/19/20 10/20/20 10/21/20 10/22/20 10/23/20 10/24/20 10/25/20 10/26/20 10/27/20 10/28/20 10/29/20 10/30/20 10/31/20 11/1/20 11/2/20 11/3/20 11/4/20 11/5/20 11/6/20 11/7/20 11/8/20 11/9/20 11/10/20 11/11/20 11/12/20 11/13/20 11/14/20 11/15/20 11/16/20 11/17/20 11/18/20 11/19/20 11/20/20 11/21/20 11/22/20 11/23/20 11/24/20 11/25/20 11/26/20 11/27/20 11/28/20 11/29/20 11/30/20 12/1/20 12/2/20 12/3/20 12/4/20 12/5/20 12/6/20 12/7/20 12/8/20 12/9/20 12/10/20 12/11/20 12/12/20 12/13/20 12/14/20 12/15/20 12/16/20 12/17/20 12/18/20 12/19/20 12/20/20 12/21/20 12/22/20 12/23/20 12/24/20 12/25/20 12/26/20 12/27/20 12/28/20 12/29/20 12/30/20 12/31/20 1/1/21 1/2/21 1/3/21 1/4/21 1/5/21 1/6/21 1/7/21 1/8/21 1/9/21 1/10/21 1/11/21 1/12/21 1/13/21 1/14/21 1/15/21 1/16/21 1/17/21 1/18/21 1/19/21 1/20/21 1/21/21 1/22/21 1/23/21 1/24/21 1/25/21 1/26/21 1/27/21 1/28/21 1/29/21 1/30/21 1/31/21 2/1/21 2/2/21 2/3/21 2/4/21 2/5/21 2/6/21 2/7/21 2/8/21 2/9/21 2/10/21 2/11/21 2/12/21 2/13/21 2/14/21 2/15/21 2/16/21 2/17/21 2/18/21 2/19/21 2/20/21 2/21/21 2/22/21 2/23/21 2/24/21 2/25/21 2/26/21 2/27/21 2/28/21 3/1/21 3/2/21 3/3/21 3/4/21 3/5/21 3/6/21 3/7/21 3/8/21 3/9/21 3/10/21 3/11/21 3/12/21 3/13/21 3/14/21 3/15/21 3/16/21 3/17/21 3/18/21 3/19/21 3/20/21 3/21/21 3/22/21 3/23/21 3/24/21 3/25/21 3/26/21 3/27/21 3/28/21 3/29/21 3/30/21 3/31/21 4/1/21 4/2/21 4/3/21 4/4/21 4/5/21 4/6/21 4/7/21 4/8/21 4/9/21 4/10/21 4/11/21 4/12/21 4/13/21 4/14/21 4/15/21 4/16/21 4/17/21 4/18/21 4/19/21 4/20/21 4/21/21 4/22/21 4/23/21 4/24/21 4/25/21 4/26/21 4/27/21 4/28/21 4/29/21 4/30/21 5/1/21 5/2/21 5/3/21 5/4/21 5/5/21 5/6/21 5/7/21 5/8/21 5/9/21 5/10/21 5/11/21 5/12/21 5/13/21 5/14/21 5/15/21 5/16/21 5/17/21 5/18/21 5/19/21 5/20/21 5/21/21 5/22/21 5/23/21 5/24/21 5/25/21 5/26/21 5/27/21 5/28/21 5/29/21 5/30/21 5/31/21 6/1/21 6/2/21 6/3/21 6/4/21 6/5/21 6/6/21 6/7/21 6/8/21 6/9/21 6/10/21 6/11/21 6/12/21 6/13/21 6/14/21 6/15/21 6/16/21 6/17/21 6/18/21 6/19/21 6/20/21 6/21/21 6/22/21 6/23/21 6/24/21 6/25/21 6/26/21 6/27/21 6/28/21 6/29/21 6/30/21 7/1/21 7/2/21 7/3/21 7/4/21 7/5/21 7/6/21 7/7/21 7/8/21 7/9/21 7/10/21 7/11/21 7/12/21 7/13/21 7/14/21 7/15/21 7/16/21 7/17/21 7/18/21 7/19/21 7/20/21 7/21/21 7/22/21 7/23/21 7/24/21 7/25/21 7/26/21 7/27/21 7/28/21 7/29/21 7/30/21 7/31/21 8/1/21 8/2/21 8/3/21 8/4/21 8/5/21 8/6/21 8/7/21 8/8/21 8/9/21 8/10/21 8/11/21 8/12/21 8/13/21 8/14/21 8/15/21 8/16/21 8/17/21 8/18/21 8/19/21 8/20/21 8/21/21 8/22/21 8/23/21 8/24/21 8/25/21 8/26/21 8/27/21 8/28/21 8/29/21 8/30/21 8/31/21 9/1/21 9/2/21 9/3/21 9/4/21 9/5/21 9/6/21 9/7/21 9/8/21 9/9/21 9/10/21 9/11/21 9/12/21 9/13/21 9/14/21 9/15/21 9/16/21 9/17/21 9/18/21 9/19/21 9/20/21 9/21/21 9/22/21 9/23/21 9/24/21 9/25/21 9/26/21 9/27/21 9/28/21 9/29/21 9/30/21 10/1/21 10/2/21 10/3/21 10/4/21 10/5/21 10/6/21 10/7/21 10/8/21 10/9/21 10/10/21 10/11/21 10/12/21 10/13/21 10/14/21 10/15/21 10/16/21 10/17/21 10/18/21 10/19/21 10/20/21 10/21/21 10/22/21 10/23/21 10/24/21 10/25/21 10/26/21 10/27/21 10/28/21 10/29/21 10/30/21 10/31/21 11/1/21 11/2/21 11/3/21 11/4/21 11/5/21 11/6/21 11/7/21 11/8/21 11/9/21 11/10/21 11/11/21 11/12/21 11/13/21 11/14/21 11/15/21 11/16/21 11/17/21 11/18/21 11/19/21 11/20/21 11/21/21 11/22/21 11/23/21 11/24/21 11/25/21 11/26/21 11/27/21 11/28/21 11/29/21 11/30/21 12/1/21 12/2/21 12/3/21 12/4/21 12/5/21 12/6/21 12/7/21 12/8/21 12/9/21 12/10/21 12/11/21 12/12/21 12/13/21 12/14/21 12/15/21 12/16/21 12/17/21 12/18/21 12/19/21 12/20/21 12/21/21 12/22/21 12/23/21 12/24/21 12/25/21 12/26/21 12/27/21 12/28/21 12/29/21 12/30/21 Alberta Canada 53.9333 -116.5765 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 4 7 7 19 19 29 29 39 56 74 97 119 146 195 259 301 359 358 486 542 542 621 661 690 754 969 969 1075 1181 1250 1373 1373 1423 1451 1567 1567 1732 1870 1870 1996 2397 2562 2803 2908 3095 3401 3720 4017 4233 4480 4696 4850 5165 5355 5573 5670 5766 5836 5893 5963 6017 6098 6157 6253 6300 6345 6407 6457 6515 6587 6644 6683 6716 6735 6768 6800 6818 6860 6879 6901 6926 6955 6979 6992 7010 7044 7057 7076 7091 7098 7138 7138 7202 7229 7276 7316 7346 7383 7433 7453 7482 7530 7579 7625 7673 7704 7736 7781 7825 7851 7888 7957 7996 8067 8108 8108 8202 8259 8259 8259 8389 8436 8482 8519 8596 8596 8596 8826 8912 8994 9114 9219 9219 9219 9587 9728 9728 9975 10086 10086 10086 10390 10470 10603 10716 10843 10843 10843 10843 11146 11240 11296 11430 11430 11430 11687 11772 11893 11969 12053 12053 12053 12053 12419 12501 12501 12748 12748 12748 13006 13083 13210 13318 13476 13476 13476 13902 14066 14180 14310 14474 14474 14474 14474 15093 15093 15304 15415 15415 15415 15833 15957 16128 16274 16381 16381 16381 16739 16889 17032 17190 17343 17343 17343 17749 17909 18062 18235 18357 18357 18357 18935 19211 19354 19718 19995 19995 19995 19995 20956 21199 21443 21775 21775 21775 22673 22996 23402 23829 24261 24261 24261 25733 26155 26565 27042 27664 27664 27664 27664 29932 29932 30447 31858 32777 33504 34160 34873 35545 36405 37312 38338 39329 40189 40962 41692 42797 43952 45288 46872 48421 49536 50801 51878 53105 54836 56444 58177 59484 61169 63023 64851 66730 68566 70301 72028 73488 75054 76792 78382 80099 81986 83327 84597 86168 87581 88933 90219 91459 92480 93781 94788 95979 96893 97352 98269 99141 100428 100428 100428 100428 104228 105535 106378 107501 108469 109652 110641 111452 112091 112743 113618 114585 115370 116087 116837 117311 117767 118436 119114 119757 120330 120793 121535 121901 122360 122821 123364 123747 124208 124563 124831 125090 125672 126068 126416 126767 127036 127231 127570 127921 128235 128540 128824 129075 129338 129615 130030 130355 130735 131063 131336 131603 132033 132432 132788 133203 133504 133795 134052 134454 134785 135196 135537 135837 136119 136374 136773 137137 137562 138036 138424 138788 139143 139622 140127 140823 141379 141934 142390 142855 143547 144311 145028 145696 146340 146885 147461 148332 149207 149207 150307 150307 153194 154125 155476 156905 158426 159719 160902 162038 163119 164531 166177 167793 169279 170795 172186 173531 175230 177087 178777 180369 181806 183301 184840 186679 188727 190734 193167 194898 196910 198653 200924 203135 205115 207157 208790 210387 211836 213635 215193 216626 217821 218961 219682 220559 221467 222279 223011 223632 224195 224647 225034 225424 225937 226449 226855 227246 227509 227718 228128 228424 228668 228961 229192 229319 229458 229771 229949 230119 230298 230463 230578 230705 230858 231008 231132 231259 231359 231419 231476 231568 231641 231641 231641 231641 231850 231911 231987 231987 232097 232097 232097 232236 232269 232336 232359 232411 232411 232411 232501 232536 232582 232635 232676 232676 232676 232806 232875 232956 233062 233160 233160 233160 233547 233681 233875 234108 234295 234295 234295 234295 235038 235244 235641 236010 236010 236010 237027 237306 237807 238357 238939 238939 238939 240346 240753 241431 242248 242997 242997 242997 244969 245598 246674 247786 248954 248954 248954 252010 252930 254245 255584 256985 256985 256985 256985 261888 263054 264564 266037 266037 266037 270777 272211 273820 275538 277558 277558 277558 282191 283710 285046 286706 288357 288357 288357 293538 294784 296466 298172 299802 299802 299802 303839 304502 305765 307019 308275 308275 308275 308275 311633 312285 313201 314252 314252 314252 316433 316964 317750 318520 319176 319176 319176 320768 321210 321855 322386 322989 322989 322989 324199 324514 325001 325517 325983 325983 325983 327283 327705 328189 328189 329030 329030 329030 330098 330419 330831 331214 331626 331626 331626 332751 333004 333468 333847 334203 334203 334203 335009 335247 335677 336043 336392 336392 336392 337180 337420 337808 338141 338428 338428 338428 339291 339541 339997 340470 341023 341023 341023 342948 343734 345080 346705 346705 346705 346705 346705 346705 357623 361623 0.011765 Nova Scotia Canada 44.6820 -63.7443 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 7 12 14 15 21 28 41 51 68 73 90 110 122 127 147 173 193 207 236 262 293 310 310 342 407 428 445 474 517 549 579 606 649 675 721 737 772 827 850 865 873 900 915 935 947 959 963 971 985 991 998 1007 1008 1011 1018 1019 1020 1024 1026 1034 1037 1040 1043 1044 1045 1046 1048 1049 1050 1051 1052 1053 1055 1055 1056 1056 1057 1057 1058 1058 1058 1058 1059 1059 1060 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1061 1062 1063 1064 1064 1064 1064 1065 1065 1066 1066 1066 1066 1066 1066 1066 1067 1067 1067 1067 1067 1067 1067 1067 1067 1067 1067 1067 1067 1067 1067 1067 1069 1069 1071 1071 1071 1071 1071 1071 1071 1071 1071 1071 1071 1071 1072 1074 1074 1075 1075 1076 1077 1077 1078 1080 1080 1080 1081 1081 1083 1083 1083 1085 1085 1085 1085 1085 1085 1085 1086 1086 1086 1086 1086 1086 1086 1086 1086 1086 1086 1086 1086 1086 1086 1087 1087 1087 1087 1087 1087 1087 1087 1088 1088 1089 1089 1089 1089 1089 1089 1089 1089 1092 1092 1092 1092 1092 1092 1093 1093 1097 1097 1097 1097 1097 1097 1100 1100 1101 1102 1102 1102 1104 1109 1111 1113 1114 1118 1119 1121 1125 1128 1129 1132 1134 1134 1136 1142 1144 1146 1151 1154 1155 1160 1168 1179 1190 1227 1243 1257 1257 1257 1257 1305 1315 1332 1343 1358 1364 1368 1376 1383 1389 1393 1402 1409 1415 1420 1426 1430 1436 1443 1445 1445 1447 1454 1458 1465 1465 1465 1465 1478 1480 1483 1486 1486 1499 1499 1505 1508 1520 1524 1526 1529 1528 1533 1534 1542 1548 1550 1554 1558 1557 1561 1564 1565 1570 1570 1571 1571 1572 1576 1576 1577 1580 1580 1581 1582 1583 1584 1584 1584 1585 1586 1587 1588 1590 1590 1592 1593 1594 1597 1600 1602 1604 1608 1609 1610 1613 1616 1624 1634 1638 1641 1642 1643 1646 1649 1651 1657 1659 1659 1664 1665 1665 1666 1670 1670 1670 1672 1674 1677 1680 1682 1688 1690 1691 1696 1699 1704 1709 1711 1711 1714 1716 1719 1728 1732 1739 1742 1747 1749 1754 1756 1764 1768 1775 1781 1783 1786 1792 1800 1807 1822 1831 1856 1894 1938 1990 2053 2119 2215 2290 2360 2427 2575 2708 2854 3007 3182 3364 3591 3754 3919 4038 4152 4301 4407 4524 4610 4736 4827 4917 5000 5065 5149 5213 5286 5335 5389 5424 5457 5497 5530 5550 5567 5579 5595 5618 5633 5651 5663 5680 5694 5707 5721 5729 5736 5742 5749 5751 5759 5773 5784 5789 5791 5791 5793 5793 5798 5814 5825 5828 5831 5832 5836 5840 5842 5850 5853 5854 5861 5862 5864 5865 5866 5870 5871 5870 5870 5870 5870 5870 5873 5873 5873 5880 5880 5882 5882 5882 5883 5885 5885 5886 5887 5887 5887 5887 5893 5895 5899 5900 5900 5900 5907 5908 5911 5918 5920 5920 5920 5928 5929 5938 5946 5956 5956 5956 5956 5982 5989 5990 5999 5999 5999 6030 6031 6038 6042 6047 6047 6047 6047 6076 6090 6107 6117 6117 6117 6188 6254 6260 6294 6312 6312 6312 6367 6392 6411 6452 6486 6486 6486 6569 6598 6638 6638 6715 6715 6715 6800 6839 6864 6893 6918 6918 6918 6918 7011 7033 7059 7077 7077 7077 7077 7161 7166 7185 7208 7208 7208 7265 7272 7298 7328 7354 7354 7354 7413 7424 7462 7512 7550 7550 7550 7661 7717 7746 7746 7815 7815 7815 7913 7944 7963 7985 8012 8012 8012 8072 8100 8119 8141 8169 8169 8169 8227 8288 8322 8362 8381 8381 8381 8427 8427 8481 8532 8591 8591 8591 8790 8856 8968 9060 9202 9202 9202 9464 9607 9607 9795 9988 9988 9988 9988 9988 10094 10124 0.011765 Saint Barthelemy France 17.9000 -62.8333 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 8 8 8 8 9 9 9 9 9 9 9 13 13 13 13 13 13 13 13 13 16 16 16 16 16 16 16 16 17 17 17 18 18 18 18 18 18 18 18 18 18 18 18 21 21 21 21 21 23 23 23 23 23 23 23 23 45 45 45 48 48 48 48 48 48 62 62 62 62 62 62 62 62 65 65 65 65 65 67 72 72 72 72 72 72 77 77 77 83 83 83 83 83 89 89 89 89 89 90 90 90 90 90 90 90 90 109 109 109 109 109 109 127 127 127 127 127 127 127 127 127 127 127 127 152 152 152 152 152 152 152 164 164 164 164 164 164 164 172 172 172 172 172 182 182 182 182 182 182 182 189 189 189 189 189 190 190 190 190 191 191 191 191 191 191 191 224 224 224 224 224 224 224 281 281 281 281 376 376 376 376 376 376 376 376 379 379 379 379 379 379 379 379 379 425 425 425 425 425 475 475 475 475 475 475 475 475 475 533 533 533 533 612 612 612 612 612 612 612 671 671 671 671 671 671 671 671 725 725 725 725 725 725 725 776 776 776 776 776 776 776 857 857 857 857 857 857 910 910 910 910 910 910 910 928 928 928 928 928 928 928 928 954 954 954 954 954 954 954 976 976 976 976 976 976 976 988 988 988 988 988 988 994 994 994 994 994 994 994 994 1010 1010 1010 1010 1010 1010 1010 1016 1016 1016 1016 1016 1016 1016 1023 1023 1023 1023 1023 1023 1023 1029 1029 1029 1029 1029 1029 1029 1032 1032 1032 1032 1032 1032 1032 1040 1040 1040 1040 1040 1040 1040 1043 1043 1043 1043 1043 1043 1043 1046 1046 1046 1046 1046 1046 1046 1052 1052 1052 1052 1052 1052 1057 1057 1057 1057 1057 1057 1057 1065 1065 1065 1065 1065 1065 1065 1221 1335 1335 1335 1335 1335 1335 1389 1399 1399 1453 1453 1453 1453 1453 1479 1479 1532 1532 1532 1532 1553 1553 1553 1553 1553 1553 1553 1592 1592 1592 1592 1592 1592 1592 1592 1592 1593 1593 1607 1607 1607 1607 1607 1607 1613 1613 1613 1613 1613 1613 1624 1624 1624 1624 1624 1624 1624 1624 1624 1634 1634 1634 1634 1634 1634 1634 1649 1649 1649 1649 1649 1649 1649 1658 1658 1658 1658 1658 1658 1659 1659 1659 1659 1659 1659 1659 1659 1659 1659 1659 1659 1659 1659 1659 1659 1660 1660 1660 1660 1660 1661 1661 1661 1661 1661 1661 1661 1661 1661 1661 1661 1661 1661 1666 1666 1666 1666 1666 1666 1666 1666 1672 1672 1672 1672 1672 1672 1674 1674 1674 1674 1674 1674 1674 1683 1683 1683 1683 1683 1683 1683 1683 1692 1692 1692 1692 1692 1692 1725 1726 1726 1895 0.011765 Reunion France -21.1151 55.5364 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 5 6 7 9 9 12 14 28 45 64 71 94 111 135 145 183 183 224 247 281 308 321 334 344 349 358 358 362 382 388 389 391 391 391 394 402 407 408 408 410 410 412 412 417 417 418 418 420 420 422 423 423 424 424 425 427 426 431 436 436 437 439 440 441 443 443 446 446 447 449 449 452 452 456 459 460 465 470 471 471 473 477 478 479 480 480 480 481 481 486 487 488 489 495 496 495 497 502 504 505 506 507 507 508 516 517 520 521 522 526 528 531 533 536 547 550 551 563 566 571 577 593 596 599 608 612 614 624 628 631 639 645 646 654 657 657 657 657 657 657 660 664 667 667 669 670 671 675 681 687 690 702 734 754 776 816 855 880 903 903 996 1075 1117 1209 1244 1292 1372 1410 1487 1557 1634 1679 1714 1796 1912 2002 2115 2222 2277 2346 2416 2510 2623 2723 2805 2872 2902 3002 3099 3194 3194 3194 3415 3415 3501 3501 3685 3685 3685 3882 3882 3993 3993 4178 4178 4178 4328 4328 4385 4385 4491 4491 4491 4624 4624 4678 4678 4776 4776 4776 4921 4921 5015 5015 5149 5149 5149 5361 5361 5472 5472 5659 5659 5659 5898 5898 6037 6037 6264 6264 6264 6572 6572 6735 6735 6881 6881 6881 7161 7161 7298 7298 7501 7501 7501 7689 7689 7836 7836 7940 7940 7940 8054 8054 8102 8102 8200 8200 8200 8200 8294 8294 8345 8345 8345 8345 8345 8534 8534 8588 8588 8704 8704 8704 8801 8801 8846 8846 8909 8909 8909 8936 8972 8972 9037 9037 9037 9037 9118 9118 9173 9173 9247 9247 9359 9359 9359 9359 9406 9443 9443 9443 9552 9552 9584 9584 9701 9701 9701 9843 9843 9904 9904 9996 9996 9996 10194 10194 10330 10330 10487 10487 10487 10487 10487 10907 10907 10907 10907 10907 10907 10907 11562 11562 11562 11562 11562 11562 11562 12416 12416 12416 12416 12416 12416 13125 13125 13125 13125 13125 13125 13125 13125 13801 13801 13801 13801 13801 13801 14631 14631 14631 14631 14631 14631 14631 15561 15561 15561 15561 15561 15561 15561 16586 16586 16586 16586 16586 16586 16586 17508 17508 17508 17508 17508 17508 18425 18425 18425 18425 18425 18425 18425 18425 19343 19343 19343 19343 19343 19343 20381 20381 20381 20381 20381 20381 20381 20381 21451 21451 21451 21451 21451 21451 21451 22644 22644 22644 22644 22644 22644 22644 23566 23566 23566 23566 23566 23566 23566 24901 24901 24901 24901 24901 24901 24901 26075 26075 26075 26075 26075 26075 26075 27235 27235 27235 27235 27235 27235 27235 28441 28441 28441 28441 28441 28441 28441 29502 29502 29502 29502 29502 29502 30583 30583 30583 30583 30583 30583 30583 31845 31845 31845 31845 31845 31845 31845 31845 33295 33295 33295 33295 33295 33295 33295 34615 34615 34615 34615 34615 34615 34615 37231 37231 37231 37231 37231 37231 40245 40245 40245 40245 40245 40245 40245 40245 43835 43835 43835 43835 43835 43835 46754 46754 46754 46754 46754 46754 46754 46754 48683 48683 48683 48683 48683 48683 48683 50346 50346 50346 50346 50346 50346 50346 51651 51651 51651 51651 51651 51651 52643 52643 52643 52643 52643 52643 52643 53241 53241 53241 53241 53241 53241 53241 53241 53241 53241 53241 53241 53241 53241 53963 53963 53963 53963 53963 53963 53963 54024 54024 54024 54024 54024 54024 54024 54024 54024 54024 54438 54438 54438 54438 54438 54668 54668 54668 54668 54668 54668 54668 54668 55125 55125 55125 55125 55125 55125 55865 55865 55865 55865 55865 55865 55865 55865 57173 57173 57173 57173 57173 57173 59048 59048 59048 59048 59048 59048 61188 61188 61188 61188 61188 61188 61188 63863 63863 63863 63863 63863 63863 63863 67237 67237 67237 67237 67237 67237 67237 67237 67237 71795 71795 71795 71795 71795 71795 76602 76602 0.011765 Queensland Australia -27.4698 153.0251 0 0 0 0 0 0 0 1 3 2 3 2 2 3 3 4 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 9 9 9 11 11 13 13 13 15 15 18 20 20 35 46 61 68 78 94 144 184 221 259 319 397 443 493 555 625 656 689 743 781 835 873 900 907 921 934 943 953 965 974 983 987 998 999 1001 1007 1015 1019 1019 1024 1024 1026 1026 1026 1030 1033 1034 1033 1033 1034 1035 1038 1043 1043 1045 1045 1045 1045 1045 1051 1052 1051 1054 1055 1055 1057 1057 1058 1058 1058 1060 1061 1056 1057 1058 1058 1058 1058 1058 1058 1059 1059 1060 1060 1061 1061 1062 1062 1062 1063 1064 1065 1065 1065 1065 1066 1066 1066 1066 1066 1066 1066 1066 1066 1067 1067 1067 1067 1067 1067 1067 1067 1067 1067 1067 1068 1068 1068 1068 1070 1070 1071 1071 1071 1071 1071 1071 1071 1072 1072 1073 1074 1076 1076 1076 1076 1076 1078 1082 1083 1084 1085 1085 1085 1088 1088 1087 1088 1088 1089 1089 1089 1089 1091 1091 1091 1091 1091 1092 1093 1094 1103 1105 1106 1106 1107 1110 1113 1117 1121 1122 1124 1126 1128 1128 1129 1131 1133 1134 1143 1143 1145 1149 1149 1149 1150 1149 1150 1150 1150 1152 1153 1153 1153 1153 1153 1156 1157 1157 1157 1157 1157 1160 1160 1160 1160 1160 1160 1160 1160 1161 1161 1161 1161 1161 1162 1164 1164 1164 1164 1164 1165 1165 1167 1167 1167 1167 1167 1169 1169 1172 1171 1172 1172 1175 1177 1177 1177 1177 1177 1177 1178 1179 1182 1183 1185 1185 1185 1186 1187 1190 1190 1192 1193 1196 1197 1197 1197 1198 1199 1201 1201 1202 1205 1206 1208 1210 1212 1215 1221 1221 1225 1224 1226 1226 1227 1228 1229 1230 1233 1232 1234 1235 1235 1236 1238 1240 1241 1241 1246 1248 1250 1253 1253 1255 1255 1260 1262 1263 1265 1274 1274 1274 1278 1281 1283 1287 1290 1291 1293 1294 1297 1299 1300 1303 1303 1303 1305 1305 1306 1307 1308 1309 1309 1310 1311 1311 1311 1309 1311 1312 1314 1315 1316 1317 1318 1320 1320 1320 1320 1320 1320 1321 1321 1321 1323 1323 1323 1324 1328 1329 1329 1331 1335 1335 1342 1344 1347 1349 1356 1362 1367 1373 1375 1379 1380 1386 1388 1394 1402 1411 1415 1417 1421 1422 1426 1429 1436 1443 1446 1456 1466 1467 1477 1485 1488 1489 1492 1491 1497 1500 1501 1502 1502 1504 1506 1508 1509 1515 1516 1518 1518 1518 1519 1520 1524 1525 1529 1531 1534 1550 1554 1559 1561 1564 1567 1568 1568 1571 1573 1576 1580 1580 1580 1583 1585 1585 1586 1589 1589 1591 1592 1592 1595 1597 1597 1605 1607 1611 1613 1615 1616 1618 1618 1618 1619 1621 1621 1630 1632 1632 1633 1634 1642 1642 1642 1650 1652 1655 1655 1661 1664 1664 1665 1670 1673 1674 1678 1679 1680 1683 1686 1690 1696 1700 1705 1714 1715 1723 1728 1729 1732 1732 1737 1738 1739 1742 1747 1752 1753 1754 1755 1757 1761 1761 1761 1764 1763 1770 1771 1770 1790 1791 1793 1800 1809 1824 1840 1859 1886 1896 1909 1918 1923 1926 1929 1940 1948 1955 1956 1955 1957 1961 1961 1962 1964 1964 1966 1972 1972 1972 1973 1977 1977 1979 1979 1980 1982 1982 1984 1985 1991 1991 1991 1992 1995 2002 2003 2007 2009 2010 2013 2014 2015 2015 2017 2018 2019 2021 2021 2022 2022 2022 2028 2029 2035 2039 2042 2043 2046 2048 2051 2056 2056 2059 2062 2063 2067 2067 2067 2068 2071 2071 2071 2071 2072 2077 2082 2082 2082 2082 2085 2086 2087 2089 2089 2089 2090 2090 2089 2092 2094 2095 2098 2098 2099 2102 2105 2109 2106 2106 2109 2110 2110 2111 2112 2112 2112 2112 2113 2115 2117 2116 2117 2120 2125 2127 2130 2133 2139 2146 2152 2155 2155 2157 2157 2165 2167 2168 2176 2180 2188 2210 2227 2258 2297 2356 2442 2613 2977 2977 3563 4322 5033 6961 8534 10752 10752 0.011765 ... Guangxi China 23.8298 108.7881 2 5 23 23 36 46 51 58 78 87 100 111 127 139 150 168 172 183 195 210 215 222 222 226 235 237 238 242 244 245 246 249 249 251 252 252 252 252 252 252 252 252 252 252 252 252 252 252 252 252 252 252 252 252 252 253 253 253 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 254 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 257 257 257 257 257 257 257 257 257 258 258 258 258 258 258 258 258 258 258 258 259 259 259 259 259 259 259 259 259 259 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 260 262 262 262 263 263 263 263 263 263 263 263 263 263 263 263 263 263 263 263 263 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 264 265 266 266 266 266 266 266 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 267 270 270 270 270 270 270 270 270 270 270 270 270 270 270 270 270 270 270 270 270 271 274 274 274 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 275 276 276 276 276 276 276 276 276 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 277 280 287 287 287 287 289 289 289 289 289 289 289 289 289 289 289 289 289 289 289 290 290 290 290 290 291 291 291 291 292 292 292 292 292 292 292 292 292 295 297 297 297 297 297 298 298 298 298 298 298 298 298 298 299 299 301 301 301 304 305 306 306 314 316 317 317 320 320 320 320 320 323 325 326 327 329 330 331 334 335 338 339 340 341 346 349 349 350 351 355 358 359 360 361 362 362 362 362 366 367 372 373 379 381 386 390 391 393 395 396 400 401 409 413 416 417 426 439 447 456 463 478 486 490 497 499 499 506 516 523 537 540 547 554 558 568 575 593 599 605 610 613 0.011765 Guangdong China 23.3417 113.4244 26 32 53 78 111 151 207 277 354 436 535 632 725 813 895 970 1034 1095 1131 1159 1177 1219 1241 1261 1294 1316 1322 1328 1331 1332 1333 1339 1342 1345 1347 1347 1347 1348 1349 1349 1350 1350 1350 1351 1352 1352 1352 1352 1353 1356 1356 1356 1356 1360 1361 1364 1370 1378 1395 1400 1413 1415 1428 1433 1448 1456 1467 1475 1484 1494 1501 1507 1514 1516 1524 1532 1533 1536 1539 1544 1548 1552 1555 1564 1566 1571 1577 1579 1580 1581 1582 1582 1585 1585 1586 1587 1587 1588 1588 1588 1588 1588 1588 1588 1588 1589 1589 1589 1589 1589 1589 1589 1589 1589 1589 1590 1590 1590 1590 1590 1590 1591 1592 1592 1592 1592 1592 1592 1593 1593 1595 1596 1597 1598 1598 1601 1602 1602 1604 1604 1607 1607 1608 1625 1625 1628 1628 1628 1631 1631 1634 1634 1634 1634 1635 1635 1637 1637 1637 1641 1641 1642 1642 1643 1643 1643 1643 1645 1647 1647 1647 1648 1650 1650 1650 1650 1654 1657 1659 1659 1659 1661 1662 1667 1669 1672 1672 1672 1674 1675 1678 1680 1682 1683 1687 1687 1687 1687 1688 1693 1696 1699 1699 1707 1707 1709 1712 1720 1721 1725 1725 1725 1725 1727 1727 1730 1734 1734 1735 1737 1738 1739 1740 1742 1745 1758 1760 1763 1767 1769 1769 1770 1774 1776 1777 1778 1782 1783 1784 1787 1793 1797 1800 1803 1807 1807 1809 1812 1814 1819 1819 1827 1827 1831 1834 1840 1841 1846 1848 1848 1851 1852 1858 1861 1863 1869 1873 1875 1877 1881 1884 1889 1892 1895 1895 1904 1907 1908 1909 1911 1914 1916 1919 1922 1927 1935 1938 1938 1941 1943 1945 1949 1955 1955 1956 1956 1963 1966 1968 1971 1972 1973 1975 1975 1975 1979 1983 1984 1988 1988 1988 1988 1989 1989 1992 1996 1997 2000 2002 2004 2007 2009 2010 2013 2015 2016 2017 2018 2021 2022 2026 2027 2028 2031 2034 2035 2036 2037 2038 2038 2039 2040 2041 2044 2046 2046 2051 2053 2057 2060 2062 2065 2067 2068 2075 2076 2078 2081 2084 2084 2086 2087 2090 2093 2094 2098 2099 2104 2106 2108 2115 2116 2121 2121 2124 2125 2127 2129 2132 2134 2135 2137 2144 2151 2151 2152 2154 2157 2159 2163 2171 2177 2180 2180 2183 2184 2187 2196 2196 2198 2200 2205 2206 2212 2215 2218 2221 2222 2225 2229 2233 2235 2236 2238 2240 2243 2244 2245 2245 2245 2246 2249 2251 2252 2253 2257 2259 2263 2265 2266 2267 2275 2277 2279 2282 2282 2285 2287 2287 2289 2290 2291 2295 2295 2296 2299 2301 2304 2308 2310 2313 2317 2319 2319 2320 2322 2327 2328 2328 2329 2331 2334 2335 2337 2344 2350 2354 2358 2359 2360 2365 2365 2370 2372 2373 2381 2383 2386 2387 2392 2396 2397 2398 2399 2400 2406 2409 2412 2412 2413 2427 2428 2431 2432 2455 2468 2481 2498 2509 2525 2534 2542 2564 2573 2582 2593 2605 2618 2625 2635 2650 2657 2666 2680 2692 2699 2706 2709 2717 2723 2727 2728 2733 2736 2737 2737 2745 2748 2751 2756 2759 2764 2766 2769 2770 2770 2774 2777 2779 2791 2795 2796 2800 2808 2812 2812 2820 2834 2839 2845 2853 2866 2869 2872 2881 2882 2884 2886 2892 2894 2896 2909 2912 2915 2923 2931 2933 2938 2947 2950 2963 2968 2977 2978 2988 2997 3001 3007 3012 3020 3023 3032 3040 3043 3046 3055 3059 3065 3074 3079 3083 3087 3094 3096 3100 3104 3109 3111 3117 3120 3128 3132 3135 3137 3140 3142 3142 3145 3147 3149 3150 3159 3163 3164 3167 3168 3171 3177 3180 3183 3187 3191 3191 3191 3193 3193 3193 3195 3195 3197 3199 3199 3199 3199 3201 3204 3207 3208 3209 3210 3211 3211 3215 3217 3217 3221 3223 3224 3224 3226 3230 3233 3234 3237 3240 3243 3247 3248 3249 3251 3252 3253 3257 3259 3260 3264 3267 3269 3272 3274 3279 3281 3285 3291 3294 3297 3301 3310 3314 3315 3318 3322 3323 3324 3327 3330 3333 3333 3333 3334 3339 3343 3347 3353 3359 3366 3374 3384 3394 3399 3408 3413 3419 3421 3427 3429 3433 3443 3446 0.011765 Guadeloupe France 16.2650 -61.5510 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 3 6 18 27 33 45 53 58 62 62 73 73 73 102 106 106 114 125 128 130 134 135 135 139 141 141 143 143 143 143 145 145 145 145 148 148 148 148 148 148 149 149 149 149 149 149 151 152 152 152 152 152 152 153 154 154 154 154 155 155 155 155 155 155 155 155 155 155 156 156 161 161 161 161 161 162 162 162 162 162 162 162 164 164 164 164 164 164 164 171 171 171 171 171 171 171 174 174 174 174 174 174 174 182 182 182 182 182 182 182 184 184 184 184 184 184 184 190 190 190 190 190 190 190 195 195 195 195 195 195 195 203 203 203 203 203 244 244 265 265 265 272 272 279 279 290 290 290 317 317 367 367 446 446 446 510 510 510 510 771 771 771 771 935 935 935 1145 1145 1145 1269 1269 1363 1363 1363 1363 1363 1363 1363 2287 2287 2287 3080 3080 3080 3080 3426 3426 3426 3426 3426 3426 3426 4487 4487 4487 4487 4487 4487 4487 5528 5528 5528 5528 5528 5528 6319 6319 6319 6483 6483 6483 6483 6908 6908 6908 7122 7122 7122 7122 7329 7329 7329 7329 7329 7329 7474 7474 7605 7605 7605 7605 7605 7605 7903 7903 7903 7903 7903 7903 7903 8098 8098 8098 8098 8098 8098 8098 8225 8225 8225 8225 8225 8225 8225 8344 8344 8344 8344 8344 8344 8344 8427 8427 8427 8427 8427 8427 8427 8451 8451 8451 8451 8451 8451 8451 8498 8498 8498 8498 8498 8557 8557 8557 8557 8557 8557 8557 8620 8620 8620 8620 8620 8620 8620 8620 8620 8702 8702 8702 8702 8702 8702 8702 8834 8834 8834 8834 8834 8834 8834 8948 8948 8948 8948 9056 9056 9056 9056 9056 9056 9056 9056 9156 9156 9156 9156 9156 9156 9156 9156 9156 9302 9302 9302 9302 9302 9302 9302 9351 9455 9455 9455 9455 9455 9455 9610 9610 9610 9610 9968 9968 9968 9968 9968 9968 9968 10458 10458 10458 10458 10458 10458 10458 10458 10725 10725 10725 10725 10725 10725 10725 11095 11095 11095 11095 11095 11095 11095 11512 11512 11512 11512 11512 11512 11890 11890 11890 11890 11890 11890 11890 12304 12304 12304 12304 12304 12304 12304 12304 12927 12927 12927 12927 12927 12927 12927 12927 13770 13770 13770 13770 13770 13770 14634 14634 14634 14634 14634 14634 15429 15429 15429 15429 15429 15429 15429 15429 15429 15429 16079 16079 16079 16079 16079 16517 16517 16517 16517 16517 16517 16517 16874 16874 16874 16874 16874 16874 16874 17108 17108 17108 17108 17108 17108 17108 17288 17288 17288 17288 17288 17288 17288 17288 17427 17427 17427 17427 17427 17427 17427 17427 17539 17539 17539 17539 17539 17539 17684 17684 17684 17684 17684 17684 17684 17809 17809 17809 17809 17809 17809 17809 17982 17982 17982 17982 17982 17982 17982 18313 18313 18313 18313 18313 18313 18313 21125 21125 21125 21125 21125 21125 21125 21125 26771 26771 26771 26771 26771 26771 29760 35283 35283 35283 35283 35283 35283 37955 37955 37955 37955 37955 37955 37955 45393 45393 45393 45393 45393 45393 45393 45471 45471 49515 49515 49515 49515 49515 49515 51485 51485 51485 51485 51485 51485 52463 52463 52463 52463 53140 53140 53140 53140 53140 53106 53106 53106 53106 53106 53106 53544 53544 53544 53544 53544 53544 53544 53544 53836 53836 53836 53836 53836 53836 54095 54095 54095 54095 54095 54095 54095 54288 54288 54288 54288 54288 54288 54288 54288 54288 54474 54474 54474 54474 54474 54672 54672 54672 54672 54672 54672 54854 54854 54854 54854 54854 54854 54854 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55080 55375 55375 55375 55375 55375 55375 55375 55375 55564 55564 55564 55564 55564 55564 55625 55795 55795 55795 0.011765 Greenland Denmark 71.7069 -42.6043 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 2 2 2 4 4 5 6 6 10 10 10 10 10 10 10 10 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 12 12 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 15 15 16 16 16 16 16 16 16 16 16 16 16 16 16 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 19 19 19 19 19 19 19 19 19 19 19 19 19 25 25 25 25 26 26 26 26 26 27 27 27 27 27 27 28 28 27 29 29 29 29 29 29 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 34 34 34 34 34 34 34 34 36 36 37 40 40 40 40 40 40 43 43 43 43 43 43 43 44 44 44 49 49 49 49 49 49 49 50 50 50 50 50 50 50 50 50 50 50 50 50 51 51 51 51 51 52 55 55 64 65 65 69 72 78 81 83 83 84 85 89 92 92 92 108 117 118 119 122 122 130 135 151 160 168 175 182 187 201 221 235 245 245 249 257 273 285 296 298 298 305 310 313 318 329 329 333 333 334 343 347 347 349 353 353 360 377 377 382 390 395 395 409 433 441 454 464 464 469 504 528 541 553 553 565 565 571 573 576 584 584 591 591 595 600 601 620 623 623 623 630 638 645 654 654 654 654 688 700 716 731 731 731 746 772 779 787 799 799 799 810 823 835 846 859 859 859 882 922 963 982 990 990 990 1039 1070 1095 1116 1129 1129 1129 1188 1292 1311 1311 1332 1332 1332 1456 1456 1456 1542 1582 1582 1582 1621 1663 1746 1774 1774 1813 1831 1876 1876 1917 1937 1969 1969 1969 1969 1969 2182 2249 2249 2249 2249 2306 2437 2437 2610 0.011765 Zhejiang China 29.1832 120.0934 10 27 43 62 104 128 173 296 428 538 599 661 724 829 895 954 1006 1048 1075 1092 1117 1131 1145 1155 1162 1167 1171 1172 1174 1175 1203 1205 1205 1205 1205 1205 1205 1205 1205 1205 1206 1213 1213 1215 1215 1215 1215 1215 1215 1215 1215 1215 1227 1231 1231 1232 1232 1233 1234 1236 1238 1238 1240 1241 1243 1247 1251 1254 1255 1257 1257 1258 1260 1262 1263 1264 1265 1266 1267 1267 1267 1267 1267 1267 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1268 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1269 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1270 1271 1272 1273 1274 1275 1275 1275 1275 1275 1275 1275 1277 1277 1277 1277 1277 1277 1277 1277 1277 1277 1277 1277 1278 1278 1278 1278 1278 1278 1278 1278 1278 1278 1278 1278 1278 1280 1280 1281 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1282 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1283 1286 1286 1286 1287 1287 1287 1288 1288 1290 1290 1291 1291 1291 1291 1291 1291 1291 1291 1291 1292 1292 1292 1293 1293 1293 1293 1293 1293 1294 1294 1294 1294 1294 1294 1294 1294 1294 1295 1295 1295 1295 1295 1296 1296 1297 1297 1297 1297 1297 1298 1299 1299 1299 1300 1300 1300 1300 1302 1305 1305 1306 1306 1306 1306 1306 1306 1306 1306 1306 1306 1306 1308 1308 1308 1308 1308 1309 1309 1309 1311 1314 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1316 1317 1320 1320 1320 1320 1320 1320 1320 1320 1320 1320 1320 1320 1320 1320 1321 1321 1321 1321 1321 1321 1321 1321 1322 1322 1322 1322 1322 1322 1322 1322 1322 1322 1322 1322 1322 1322 1322 1322 1323 1323 1323 1323 1323 1323 1323 1323 1323 1323 1323 1323 1323 1323 1323 1323 1324 1324 1324 1324 1324 1325 1325 1325 1327 1327 1327 1327 1328 1328 1328 1329 1329 1329 1331 1331 1331 1331 1332 1332 1343 1343 1344 1344 1344 1344 1344 1344 1344 1345 1345 1346 1346 1347 1347 1347 1347 1347 1355 1356 1356 1361 1361 1361 1362 1362 1362 1363 1363 1363 1364 1364 1364 1364 1364 1364 1365 1365 1366 1368 1368 1368 1369 1370 1370 1372 1372 1373 1373 1373 1376 1377 1379 1379 1383 1383 1383 1384 1385 1385 1385 1386 1386 1386 1386 1386 1386 1386 1386 1386 1386 1386 1386 1386 1386 1386 1386 1388 1390 1392 1392 1393 1393 1393 1393 1393 1393 1393 1393 1393 1393 1393 1393 1395 1396 1396 1396 1398 1398 1398 1399 1399 1400 1400 1412 1412 1412 1412 1412 1417 1417 1417 1418 1418 1420 1420 1421 1428 1428 1429 1429 1429 1429 1430 1430 1431 1432 1433 1437 1437 1437 1438 1438 1439 1439 1439 1439 1439 1439 1440 1441 1442 1442 1442 1444 1446 1446 1446 1446 1446 1446 1447 1447 1447 1448 1448 1449 1449 1450 1450 1450 1451 1451 1451 1452 1452 1452 1453 1454 1454 1456 1457 1457 1457 1457 1457 1457 1457 1465 1465 1465 1465 1473 1475 1479 1483 1492 1495 1496 1496 1496 1496 1496 1497 1497 1497 1497 1498 1499 1499 1499 1500 1500 1500 1500 1500 1500 1501 1501 1501 1501 1501 1501 1501 1501 1501 1501 1501 1501 1501 1501 1501 1502 1510 1522 1528 1563 1601 1676 1721 1767 1823 1867 1944 1975 1987 1998 1999 2001 2002 2003 2004 2006 2008 2012 2015 2016 0.011765 Length: 85, dtype: float64 . confirmed[&#39;Country/Region&#39;].value_counts(normalize=True) . China 0.121429 Canada 0.057143 United Kingdom 0.042857 France 0.042857 Australia 0.028571 ... Guinea 0.003571 Guinea-Bissau 0.003571 Guyana 0.003571 Haiti 0.003571 Zimbabwe 0.003571 Name: Country/Region, Length: 196, dtype: float64 . confirmed.sort_values(by=&quot;Country/Region&quot;, ascending=True) . Province/State Country/Region Lat Long 1/22/20 1/23/20 1/24/20 1/25/20 1/26/20 1/27/20 ... 12/21/21 12/22/21 12/23/21 12/24/21 12/25/21 12/26/21 12/27/21 12/28/21 12/29/21 12/30/21 . 0 NaN | Afghanistan | 33.939110 | 67.709953 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 157816 | 157841 | 157878 | 157887 | 157895 | 157951 | 157967 | 157998 | 158037 | 158056 | . 1 NaN | Albania | 41.153300 | 20.168300 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 206273 | 206616 | 206935 | 207221 | 207542 | 207709 | 207709 | 208352 | 208899 | 208899 | . 2 NaN | Algeria | 28.033900 | 1.659600 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 215145 | 215430 | 215723 | 216098 | 216376 | 216637 | 216930 | 217265 | 217647 | 218037 | . 3 NaN | Andorra | 42.506300 | 1.521800 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 21062 | 21372 | 21571 | 21730 | 21730 | 21730 | 22332 | 22540 | 22823 | 23122 | . 4 NaN | Angola | -11.202700 | 17.873900 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 66566 | 67199 | 68362 | 70221 | 71142 | 71752 | 71752 | 76787 | 78475 | 79871 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 275 NaN | Vietnam | 14.058324 | 108.277199 | 0 | 2 | 2 | 2 | 2 | 2 | ... | 1571780 | 1588335 | 1604712 | 1620869 | 1636455 | 1651673 | 1666545 | 1680985 | 1694874 | 1714742 | . 276 NaN | West Bank and Gaza | 31.952200 | 35.233200 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 467058 | 467391 | 467682 | 467682 | 467682 | 467682 | 468619 | 469452 | 469748 | 469748 | . 277 NaN | Yemen | 15.552727 | 48.516388 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 10103 | 10103 | 10105 | 10109 | 10111 | 10115 | 10118 | 10123 | 10125 | 10126 | . 278 NaN | Zambia | -13.133897 | 27.849332 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 219023 | 221880 | 225260 | 228932 | 231581 | 233120 | 234476 | 238383 | 243638 | 249193 | . 279 NaN | Zimbabwe | -19.015438 | 29.154857 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 197768 | 199404 | 201344 | 202736 | 203746 | 204351 | 205449 | 207548 | 207548 | 211728 | . 280 rows × 713 columns . confirmed[&#39;12/30/21&#39;].mean() . 1023357.3035714285 . death[&#39;12/30/21&#39;].mean() . 19391.22857142857 . recover[recover[&#39;Country/Region&#39;]== &#39;Bangladesh&#39;].mean() . C: Users User AppData Local Temp/ipykernel_3132/4110245.py:1: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with &#39;numeric_only=None&#39;) is deprecated; in a future version this will raise TypeError. Select only valid columns before calling the reduction. recover[recover[&#39;Country/Region&#39;]== &#39;Bangladesh&#39;].mean() . Province/State NaN Lat 23.6850 Long 90.3563 1/22/20 0.0000 1/23/20 0.0000 ... 12/26/21 0.0000 12/27/21 0.0000 12/28/21 0.0000 12/29/21 0.0000 12/30/21 0.0000 Length: 712, dtype: float64 . death[death[&#39;Country/Region&#39;]== &#39;Bangladesh&#39;].mean() . C: Users User AppData Local Temp/ipykernel_3132/1511692858.py:1: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with &#39;numeric_only=None&#39;) is deprecated; in a future version this will raise TypeError. Select only valid columns before calling the reduction. death[death[&#39;Country/Region&#39;]== &#39;Bangladesh&#39;].mean() . Province/State NaN Lat 23.6850 Long 90.3563 1/22/20 0.0000 1/23/20 0.0000 ... 12/26/21 28060.0000 12/27/21 28061.0000 12/28/21 28062.0000 12/29/21 28063.0000 12/30/21 28070.0000 Length: 712, dtype: float64 . confirmed[confirmed[&#39;Country/Region&#39;]== &#39;Bangladesh&#39;] . Province/State Country/Region Lat Long 1/22/20 1/23/20 1/24/20 1/25/20 1/26/20 1/27/20 ... 12/21/21 12/22/21 12/23/21 12/24/21 12/25/21 12/26/21 12/27/21 12/28/21 12/29/21 12/30/21 . 20 NaN | Bangladesh | 23.685 | 90.3563 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 1581634 | 1581986 | 1582368 | 1582710 | 1582985 | 1583253 | 1583626 | 1584023 | 1584518 | 1585027 | . 1 rows × 713 columns . confirmed[confirmed[&#39;Country/Region&#39;]== &#39;Bangladesh&#39;].max() . Province/State None Country/Region Bangladesh Lat 23.685 Long 90.3563 1/22/20 0 ... 12/26/21 1583253 12/27/21 1583626 12/28/21 1584023 12/29/21 1584518 12/30/21 1585027 Length: 713, dtype: object . confirmed.iloc[1:5,700:713] . 12/18/21 12/19/21 12/20/21 12/21/21 12/22/21 12/23/21 12/24/21 12/25/21 12/26/21 12/27/21 12/28/21 12/29/21 12/30/21 . 1 205549 | 205777 | 205897 | 206273 | 206616 | 206935 | 207221 | 207542 | 207709 | 207709 | 208352 | 208899 | 208899 | . 2 214330 | 214592 | 214835 | 215145 | 215430 | 215723 | 216098 | 216376 | 216637 | 216930 | 217265 | 217647 | 218037 | . 3 20549 | 20549 | 21062 | 21062 | 21372 | 21571 | 21730 | 21730 | 21730 | 22332 | 22540 | 22823 | 23122 | . 4 65868 | 65938 | 66086 | 66566 | 67199 | 68362 | 70221 | 71142 | 71752 | 71752 | 76787 | 78475 | 79871 | . confirmed.pivot_table([&quot;12/30/20&quot;],[&quot;12/30/21&quot;, &quot;Country/Region&quot;], margins = True) . 12/30/20 . 12/30/21 Country/Region . 0 Canada 0.000000e+00 | . China 0.000000e+00 | . 1 China 1.000000e+00 | . Micronesia 0.000000e+00 | . Tonga 0.000000e+00 | . ... ... ... | . 12748050 United Kingdom 2.432888e+06 | . 22281649 Brazil 7.626563e+06 | . 34838804 India 1.026667e+07 | . 54306755 US 1.990594e+07 | . All 2.962861e+05 | . 280 rows × 1 columns . . sns.set() . %config InlineBackend.figure_fromat = &#39;retina&#39; . . for (country,now_days) ,sb_conf in confirmed.groupby([&#39;Country/Region&#39;,&#39;12/30/21&#39;]): print(&quot;country:{}, now_days:{}&quot;.format(country,now_days)) . country:Afghanistan, now_days:158056 country:Albania, now_days:208899 country:Algeria, now_days:218037 country:Andorra, now_days:23122 country:Angola, now_days:79871 country:Antigua and Barbuda, now_days:4283 country:Argentina, now_days:5606745 country:Armenia, now_days:344826 country:Australia, now_days:510 country:Australia, now_days:637 country:Australia, now_days:1153 country:Australia, now_days:3564 country:Australia, now_days:8993 country:Australia, now_days:10752 country:Australia, now_days:166373 country:Australia, now_days:176614 country:Austria, now_days:1274995 country:Azerbaijan, now_days:616352 country:Bahamas, now_days:24269 country:Bahrain, now_days:281406 country:Bangladesh, now_days:1585027 country:Barbados, now_days:28310 country:Belarus, now_days:697600 country:Belgium, now_days:2089657 country:Belize, now_days:32488 country:Benin, now_days:24935 country:Bhutan, now_days:2660 country:Bolivia, now_days:591773 country:Bosnia and Herzegovina, now_days:290471 country:Botswana, now_days:219509 country:Brazil, now_days:22281649 country:Brunei, now_days:15470 country:Bulgaria, now_days:744298 country:Burkina Faso, now_days:17632 country:Burma, now_days:530645 country:Burundi, now_days:27366 country:Cabo Verde, now_days:40738 country:Cambodia, now_days:120487 country:Cameroon, now_days:109367 country:Canada, now_days:0 country:Canada, now_days:13 country:Canada, now_days:765 country:Canada, now_days:1022 country:Canada, now_days:1729 country:Canada, now_days:2187 country:Canada, now_days:3724 country:Canada, now_days:10124 country:Canada, now_days:13590 country:Canada, now_days:78606 country:Canada, now_days:84446 country:Canada, now_days:251054 country:Canada, now_days:361623 country:Canada, now_days:586606 country:Canada, now_days:750128 country:Central African Republic, now_days:12163 country:Chad, now_days:5703 country:Chile, now_days:1804682 country:China, now_days:0 country:China, now_days:1 country:China, now_days:30 country:China, now_days:79 country:China, now_days:122 country:China, now_days:159 country:China, now_days:190 country:China, now_days:266 country:China, now_days:356 country:China, now_days:580 country:China, now_days:589 country:China, now_days:611 country:China, now_days:613 country:China, now_days:794 country:China, now_days:959 country:China, now_days:981 country:China, now_days:1009 country:China, now_days:1042 country:China, now_days:1186 country:China, now_days:1209 country:China, now_days:1218 country:China, now_days:1319 country:China, now_days:1359 country:China, now_days:1458 country:China, now_days:1625 country:China, now_days:1641 country:China, now_days:1815 country:China, now_days:2016 country:China, now_days:2035 country:China, now_days:2046 country:China, now_days:3093 country:China, now_days:3446 country:China, now_days:12630 country:China, now_days:68317 country:Colombia, now_days:5147039 country:Comoros, now_days:6284 country:Congo (Brazzaville), now_days:20089 country:Congo (Kinshasa), now_days:74793 country:Costa Rica, now_days:570556 country:Cote d&#39;Ivoire, now_days:68146 country:Croatia, now_days:709678 country:Cuba, now_days:965571 country:Cyprus, now_days:161779 country:Czechia, now_days:2469951 country:Denmark, now_days:2610 country:Denmark, now_days:5764 country:Denmark, now_days:783702 country:Diamond Princess, now_days:712 country:Djibouti, now_days:13632 country:Dominica, now_days:6814 country:Dominican Republic, now_days:417268 country:Ecuador, now_days:547186 country:Egypt, now_days:384728 country:El Salvador, now_days:121945 country:Equatorial Guinea, now_days:13710 country:Eritrea, now_days:7982 country:Estonia, now_days:240334 country:Eswatini, now_days:65832 country:Ethiopia, now_days:415443 country:Fiji, now_days:53332 country:Finland, now_days:248958 country:France, now_days:100 country:France, now_days:454 country:France, now_days:1895 country:France, now_days:4250 country:France, now_days:12826 country:France, now_days:21911 country:France, now_days:46382 country:France, now_days:47631 country:France, now_days:48123 country:France, now_days:55795 country:France, now_days:76602 country:France, now_days:9529614 country:Gabon, now_days:41073 country:Gambia, now_days:10136 country:Georgia, now_days:932641 country:Germany, now_days:7171422 country:Ghana, now_days:141295 country:Greece, now_days:1170293 country:Grenada, now_days:6181 country:Guatemala, now_days:627562 country:Guinea, now_days:31641 country:Guinea-Bissau, now_days:6476 country:Guyana, now_days:39395 country:Haiti, now_days:25985 country:Holy See, now_days:27 country:Honduras, now_days:379402 country:Hungary, now_days:1253055 country:Iceland, now_days:27059 country:India, now_days:34838804 country:Indonesia, now_days:4262540 country:Iran, now_days:6192698 country:Iraq, now_days:2093436 country:Ireland, now_days:768449 country:Israel, now_days:1380046 country:Italy, now_days:5981428 country:Jamaica, now_days:93591 country:Japan, now_days:1731878 country:Jordan, now_days:1047953 country:Kazakhstan, now_days:1072037 country:Kenya, now_days:292237 country:Kiribati, now_days:2 country:Korea, South, now_days:630838 country:Kosovo, now_days:161442 country:Kuwait, now_days:416631 country:Kyrgyzstan, now_days:184633 country:Laos, now_days:110054 country:Latvia, now_days:275517 country:Lebanon, now_days:723640 country:Lesotho, now_days:28408 country:Liberia, now_days:6278 country:Libya, now_days:388183 country:Liechtenstein, now_days:6131 country:Lithuania, now_days:517655 country:Luxembourg, now_days:102486 country:MS Zaandam, now_days:9 country:Madagascar, now_days:50279 country:Malawi, now_days:74201 country:Malaysia, now_days:2755130 country:Maldives, now_days:95540 country:Mali, now_days:20670 country:Malta, now_days:51070 country:Marshall Islands, now_days:4 country:Mauritania, now_days:41154 country:Mauritius, now_days:23372 country:Mexico, now_days:3961662 country:Micronesia, now_days:1 country:Moldova, now_days:375780 country:Monaco, now_days:4985 country:Mongolia, now_days:389361 country:Montenegro, now_days:168328 country:Morocco, now_days:961058 country:Mozambique, now_days:184219 country:Namibia, now_days:146720 country:Nepal, now_days:828207 country:Netherlands, now_days:3368 country:Netherlands, now_days:5054 country:Netherlands, now_days:19719 country:Netherlands, now_days:20710 country:Netherlands, now_days:3116039 country:New Zealand, now_days:2 country:New Zealand, now_days:14118 country:Nicaragua, now_days:17487 country:Niger, now_days:7331 country:Nigeria, now_days:241513 country:North Macedonia, now_days:224507 country:Norway, now_days:391214 country:Oman, now_days:305489 country:Pakistan, now_days:1295376 country:Palau, now_days:8 country:Panama, now_days:491043 country:Papua New Guinea, now_days:36158 country:Paraguay, now_days:466101 country:Peru, now_days:2292254 country:Philippines, now_days:2841260 country:Poland, now_days:4094608 country:Portugal, now_days:1358817 country:Qatar, now_days:249787 country:Romania, now_days:1807223 country:Russia, now_days:10299923 country:Rwanda, now_days:110558 country:Saint Kitts and Nevis, now_days:2918 country:Saint Lucia, now_days:13473 country:Saint Vincent and the Grenadines, now_days:5850 country:Samoa, now_days:3 country:San Marino, now_days:7808 country:Sao Tome and Principe, now_days:3877 country:Saudi Arabia, now_days:555417 country:Senegal, now_days:74870 country:Serbia, now_days:1297147 country:Seychelles, now_days:24788 country:Sierra Leone, now_days:6983 country:Singapore, now_days:279061 country:Slovakia, now_days:1367361 country:Slovenia, now_days:462152 country:Solomon Islands, now_days:24 country:Somalia, now_days:23532 country:South Africa, now_days:3446532 country:South Sudan, now_days:15242 country:Spain, now_days:6294745 country:Sri Lanka, now_days:586746 country:Sudan, now_days:46518 country:Summer Olympics 2020, now_days:865 country:Suriname, now_days:52269 country:Sweden, now_days:1314784 country:Switzerland, now_days:1313628 country:Syria, now_days:50243 country:Taiwan*, now_days:16988 country:Tajikistan, now_days:17493 country:Tanzania, now_days:29306 country:Thailand, now_days:2220324 country:Timor-Leste, now_days:19833 country:Togo, now_days:29416 country:Tonga, now_days:1 country:Trinidad and Tobago, now_days:91320 country:Tunisia, now_days:724680 country:Turkey, now_days:9443734 country:US, now_days:54306755 country:Uganda, now_days:139079 country:Ukraine, now_days:3840041 country:United Arab Emirates, now_days:759511 country:United Kingdom, now_days:4 country:United Kingdom, now_days:46 country:United Kingdom, now_days:83 country:United Kingdom, now_days:1674 country:United Kingdom, now_days:3071 country:United Kingdom, now_days:3283 country:United Kingdom, now_days:6420 country:United Kingdom, now_days:8533 country:United Kingdom, now_days:8818 country:United Kingdom, now_days:13578 country:United Kingdom, now_days:26799 country:United Kingdom, now_days:12748050 country:Uruguay, now_days:411658 country:Uzbekistan, now_days:198769 country:Vanuatu, now_days:7 country:Venezuela, now_days:444411 country:Vietnam, now_days:1714742 country:West Bank and Gaza, now_days:469748 country:Yemen, now_days:10126 country:Zambia, now_days:249193 country:Zimbabwe, now_days:211728 . for (country,now_days) ,sb_conf in recover.groupby([&#39;Country/Region&#39;,&#39;12/20/21&#39;]): print(&quot;country:{}, now_days:{}&quot;.format(country,now_days)) . country:Afghanistan, now_days:0 country:Albania, now_days:0 country:Algeria, now_days:0 country:Andorra, now_days:0 country:Angola, now_days:0 country:Antigua and Barbuda, now_days:0 country:Argentina, now_days:0 country:Armenia, now_days:0 country:Australia, now_days:0 country:Austria, now_days:0 country:Azerbaijan, now_days:0 country:Bahamas, now_days:0 country:Bahrain, now_days:0 country:Bangladesh, now_days:0 country:Barbados, now_days:0 country:Belarus, now_days:0 country:Belgium, now_days:0 country:Belize, now_days:0 country:Benin, now_days:0 country:Bhutan, now_days:0 country:Bolivia, now_days:0 country:Bosnia and Herzegovina, now_days:0 country:Botswana, now_days:0 country:Brazil, now_days:0 country:Brunei, now_days:0 country:Bulgaria, now_days:0 country:Burkina Faso, now_days:0 country:Burma, now_days:0 country:Burundi, now_days:0 country:Cabo Verde, now_days:0 country:Cambodia, now_days:0 country:Cameroon, now_days:0 country:Canada, now_days:0 country:Central African Republic, now_days:0 country:Chad, now_days:0 country:Chile, now_days:0 country:China, now_days:0 country:Colombia, now_days:0 country:Comoros, now_days:0 country:Congo (Brazzaville), now_days:0 country:Congo (Kinshasa), now_days:0 country:Costa Rica, now_days:0 country:Cote d&#39;Ivoire, now_days:0 country:Croatia, now_days:0 country:Cuba, now_days:0 country:Cyprus, now_days:0 country:Czechia, now_days:0 country:Denmark, now_days:0 country:Diamond Princess, now_days:0 country:Djibouti, now_days:0 country:Dominica, now_days:0 country:Dominican Republic, now_days:0 country:Ecuador, now_days:0 country:Egypt, now_days:0 country:El Salvador, now_days:0 country:Equatorial Guinea, now_days:0 country:Eritrea, now_days:0 country:Estonia, now_days:0 country:Eswatini, now_days:0 country:Ethiopia, now_days:0 country:Fiji, now_days:0 country:Finland, now_days:0 country:France, now_days:0 country:Gabon, now_days:0 country:Gambia, now_days:0 country:Georgia, now_days:0 country:Germany, now_days:0 country:Ghana, now_days:0 country:Greece, now_days:0 country:Grenada, now_days:0 country:Guatemala, now_days:0 country:Guinea, now_days:0 country:Guinea-Bissau, now_days:0 country:Guyana, now_days:0 country:Haiti, now_days:0 country:Holy See, now_days:0 country:Honduras, now_days:0 country:Hungary, now_days:0 country:Iceland, now_days:0 country:India, now_days:0 country:Indonesia, now_days:0 country:Iran, now_days:0 country:Iraq, now_days:0 country:Ireland, now_days:0 country:Israel, now_days:0 country:Italy, now_days:0 country:Jamaica, now_days:0 country:Japan, now_days:0 country:Jordan, now_days:0 country:Kazakhstan, now_days:0 country:Kenya, now_days:0 country:Kiribati, now_days:0 country:Korea, South, now_days:0 country:Kosovo, now_days:0 country:Kuwait, now_days:0 country:Kyrgyzstan, now_days:0 country:Laos, now_days:0 country:Latvia, now_days:0 country:Lebanon, now_days:0 country:Lesotho, now_days:0 country:Liberia, now_days:0 country:Libya, now_days:0 country:Liechtenstein, now_days:0 country:Lithuania, now_days:0 country:Luxembourg, now_days:0 country:MS Zaandam, now_days:0 country:Madagascar, now_days:0 country:Malawi, now_days:0 country:Malaysia, now_days:0 country:Maldives, now_days:0 country:Mali, now_days:0 country:Malta, now_days:0 country:Marshall Islands, now_days:0 country:Mauritania, now_days:0 country:Mauritius, now_days:0 country:Mexico, now_days:0 country:Micronesia, now_days:0 country:Moldova, now_days:0 country:Monaco, now_days:0 country:Mongolia, now_days:0 country:Montenegro, now_days:0 country:Morocco, now_days:0 country:Mozambique, now_days:0 country:Namibia, now_days:0 country:Nepal, now_days:0 country:Netherlands, now_days:0 country:New Zealand, now_days:0 country:Nicaragua, now_days:0 country:Niger, now_days:0 country:Nigeria, now_days:0 country:North Macedonia, now_days:0 country:Norway, now_days:0 country:Oman, now_days:0 country:Pakistan, now_days:0 country:Palau, now_days:0 country:Panama, now_days:0 country:Papua New Guinea, now_days:0 country:Paraguay, now_days:0 country:Peru, now_days:0 country:Philippines, now_days:0 country:Poland, now_days:0 country:Portugal, now_days:0 country:Qatar, now_days:0 country:Romania, now_days:0 country:Russia, now_days:0 country:Rwanda, now_days:0 country:Saint Kitts and Nevis, now_days:0 country:Saint Lucia, now_days:0 country:Saint Vincent and the Grenadines, now_days:0 country:Samoa, now_days:0 country:San Marino, now_days:0 country:Sao Tome and Principe, now_days:0 country:Saudi Arabia, now_days:0 country:Senegal, now_days:0 country:Serbia, now_days:0 country:Seychelles, now_days:0 country:Sierra Leone, now_days:0 country:Singapore, now_days:0 country:Slovakia, now_days:0 country:Slovenia, now_days:0 country:Solomon Islands, now_days:0 country:Somalia, now_days:0 country:South Africa, now_days:0 country:South Sudan, now_days:0 country:Spain, now_days:0 country:Sri Lanka, now_days:0 country:Sudan, now_days:0 country:Summer Olympics 2020, now_days:0 country:Suriname, now_days:0 country:Sweden, now_days:0 country:Switzerland, now_days:0 country:Syria, now_days:0 country:Taiwan*, now_days:0 country:Tajikistan, now_days:0 country:Tanzania, now_days:0 country:Thailand, now_days:0 country:Timor-Leste, now_days:0 country:Togo, now_days:0 country:Tonga, now_days:0 country:Trinidad and Tobago, now_days:0 country:Tunisia, now_days:0 country:Turkey, now_days:0 country:US, now_days:0 country:Uganda, now_days:0 country:Ukraine, now_days:0 country:United Arab Emirates, now_days:0 country:United Kingdom, now_days:0 country:Uruguay, now_days:0 country:Uzbekistan, now_days:0 country:Vanuatu, now_days:0 country:Venezuela, now_days:0 country:Vietnam, now_days:0 country:West Bank and Gaza, now_days:0 country:Yemen, now_days:0 country:Zambia, now_days:0 country:Zimbabwe, now_days:0 . for (country,now_days) ,sb_conf in death.groupby([&#39;Country/Region&#39;,&#39;12/30/21&#39;]): print(&quot;country:{}, now_days:{}&quot;.format(country,now_days)) . country:Afghanistan, now_days:7356 country:Albania, now_days:3212 country:Algeria, now_days:6271 country:Andorra, now_days:140 country:Angola, now_days:1764 country:Antigua and Barbuda, now_days:119 country:Argentina, now_days:117146 country:Armenia, now_days:7968 country:Australia, now_days:1 country:Australia, now_days:6 country:Australia, now_days:7 country:Australia, now_days:9 country:Australia, now_days:13 country:Australia, now_days:15 country:Australia, now_days:657 country:Australia, now_days:1525 country:Austria, now_days:13701 country:Azerbaijan, now_days:8346 country:Bahamas, now_days:716 country:Bahrain, now_days:1394 country:Bangladesh, now_days:28070 country:Barbados, now_days:260 country:Belarus, now_days:5561 country:Belgium, now_days:28308 country:Belize, now_days:598 country:Benin, now_days:161 country:Bhutan, now_days:3 country:Bolivia, now_days:19650 country:Bosnia and Herzegovina, now_days:13428 country:Botswana, now_days:2444 country:Brazil, now_days:619249 country:Brunei, now_days:98 country:Bulgaria, now_days:30890 country:Burkina Faso, now_days:318 country:Burma, now_days:19265 country:Burundi, now_days:38 country:Cabo Verde, now_days:352 country:Cambodia, now_days:3012 country:Cameroon, now_days:1851 country:Canada, now_days:0 country:Canada, now_days:1 country:Canada, now_days:4 country:Canada, now_days:12 country:Canada, now_days:14 country:Canada, now_days:18 country:Canada, now_days:111 country:Canada, now_days:159 country:Canada, now_days:955 country:Canada, now_days:1387 country:Canada, now_days:2420 country:Canada, now_days:3310 country:Canada, now_days:10226 country:Canada, now_days:11711 country:Central African Republic, now_days:101 country:Chad, now_days:181 country:Chile, now_days:39096 country:China, now_days:0 country:China, now_days:1 country:China, now_days:2 country:China, now_days:3 country:China, now_days:4 country:China, now_days:6 country:China, now_days:7 country:China, now_days:8 country:China, now_days:9 country:China, now_days:13 country:China, now_days:22 country:China, now_days:213 country:China, now_days:4512 country:Colombia, now_days:129901 country:Comoros, now_days:156 country:Congo (Brazzaville), now_days:367 country:Congo (Kinshasa), now_days:1205 country:Costa Rica, now_days:7353 country:Cote d&#39;Ivoire, now_days:712 country:Croatia, now_days:12493 country:Cuba, now_days:8322 country:Cyprus, now_days:636 country:Czechia, now_days:36061 country:Denmark, now_days:1 country:Denmark, now_days:14 country:Denmark, now_days:3256 country:Diamond Princess, now_days:13 country:Djibouti, now_days:189 country:Dominica, now_days:47 country:Dominican Republic, now_days:4246 country:Ecuador, now_days:33672 country:Egypt, now_days:21727 country:El Salvador, now_days:3823 country:Equatorial Guinea, now_days:175 country:Eritrea, now_days:75 country:Estonia, now_days:1928 country:Eswatini, now_days:1299 country:Ethiopia, now_days:6926 country:Fiji, now_days:698 country:Finland, now_days:1554 country:France, now_days:0 country:France, now_days:6 country:France, now_days:7 country:France, now_days:58 country:France, now_days:185 country:France, now_days:281 country:France, now_days:338 country:France, now_days:409 country:France, now_days:636 country:France, now_days:777 country:France, now_days:831 country:France, now_days:121012 country:Gabon, now_days:288 country:Gambia, now_days:342 country:Georgia, now_days:13758 country:Germany, now_days:111929 country:Ghana, now_days:1287 country:Greece, now_days:20708 country:Grenada, now_days:200 country:Guatemala, now_days:16106 country:Guinea, now_days:391 country:Guinea-Bissau, now_days:149 country:Guyana, now_days:1052 country:Haiti, now_days:766 country:Holy See, now_days:0 country:Honduras, now_days:10433 country:Hungary, now_days:39104 country:Iceland, now_days:37 country:India, now_days:481080 country:Indonesia, now_days:144088 country:Iran, now_days:131572 country:Iraq, now_days:24154 country:Ireland, now_days:5912 country:Israel, now_days:8243 country:Italy, now_days:137247 country:Jamaica, now_days:2470 country:Japan, now_days:18389 country:Jordan, now_days:12372 country:Kazakhstan, now_days:18211 country:Kenya, now_days:5376 country:Kiribati, now_days:0 country:Korea, South, now_days:5563 country:Kosovo, now_days:2990 country:Kuwait, now_days:2468 country:Kyrgyzstan, now_days:2800 country:Laos, now_days:360 country:Latvia, now_days:4561 country:Lebanon, now_days:9102 country:Lesotho, now_days:665 country:Liberia, now_days:287 country:Libya, now_days:5696 country:Liechtenstein, now_days:69 country:Lithuania, now_days:7373 country:Luxembourg, now_days:912 country:MS Zaandam, now_days:2 country:Madagascar, now_days:1027 country:Malawi, now_days:2355 country:Malaysia, now_days:31462 country:Maldives, now_days:262 country:Mali, now_days:658 country:Malta, now_days:476 country:Marshall Islands, now_days:0 country:Mauritania, now_days:863 country:Mauritius, now_days:240 country:Mexico, now_days:299132 country:Micronesia, now_days:0 country:Moldova, now_days:9690 country:Monaco, now_days:38 country:Mongolia, now_days:2059 country:Montenegro, now_days:2407 country:Morocco, now_days:14844 country:Mozambique, now_days:1996 country:Namibia, now_days:3616 country:Nepal, now_days:11590 country:Netherlands, now_days:23 country:Netherlands, now_days:75 country:Netherlands, now_days:181 country:Netherlands, now_days:189 country:Netherlands, now_days:20892 country:New Zealand, now_days:0 country:New Zealand, now_days:51 country:Nicaragua, now_days:217 country:Niger, now_days:274 country:Nigeria, now_days:3030 country:North Macedonia, now_days:7953 country:Norway, now_days:1305 country:Oman, now_days:4116 country:Pakistan, now_days:28927 country:Palau, now_days:0 country:Panama, now_days:7425 country:Papua New Guinea, now_days:590 country:Paraguay, now_days:16624 country:Peru, now_days:202653 country:Philippines, now_days:51373 country:Poland, now_days:96415 country:Portugal, now_days:18937 country:Qatar, now_days:617 country:Romania, now_days:58714 country:Russia, now_days:301791 country:Rwanda, now_days:1349 country:Saint Kitts and Nevis, now_days:28 country:Saint Lucia, now_days:295 country:Saint Vincent and the Grenadines, now_days:81 country:Samoa, now_days:0 country:San Marino, now_days:99 country:Sao Tome and Principe, now_days:57 country:Saudi Arabia, now_days:8875 country:Senegal, now_days:1890 country:Serbia, now_days:12688 country:Seychelles, now_days:134 country:Sierra Leone, now_days:123 country:Singapore, now_days:827 country:Slovakia, now_days:16598 country:Slovenia, now_days:5583 country:Solomon Islands, now_days:0 country:Somalia, now_days:1333 country:South Africa, now_days:91061 country:South Sudan, now_days:135 country:Spain, now_days:89405 country:Sri Lanka, now_days:14962 country:Sudan, now_days:3331 country:Summer Olympics 2020, now_days:0 country:Suriname, now_days:1189 country:Sweden, now_days:15310 country:Switzerland, now_days:12206 country:Syria, now_days:2893 country:Taiwan*, now_days:850 country:Tajikistan, now_days:125 country:Tanzania, now_days:737 country:Thailand, now_days:21672 country:Timor-Leste, now_days:122 country:Togo, now_days:246 country:Tonga, now_days:0 country:Trinidad and Tobago, now_days:2850 country:Tunisia, now_days:25556 country:Turkey, now_days:82198 country:US, now_days:824301 country:Uganda, now_days:3291 country:Ukraine, now_days:101847 country:United Arab Emirates, now_days:2162 country:United Kingdom, now_days:0 country:United Kingdom, now_days:1 country:United Kingdom, now_days:5 country:United Kingdom, now_days:11 country:United Kingdom, now_days:26 country:United Kingdom, now_days:39 country:United Kingdom, now_days:67 country:United Kingdom, now_days:100 country:United Kingdom, now_days:110 country:United Kingdom, now_days:113 country:United Kingdom, now_days:148421 country:Uruguay, now_days:6169 country:Uzbekistan, now_days:1485 country:Vanuatu, now_days:1 country:Venezuela, now_days:5324 country:Vietnam, now_days:32168 country:West Bank and Gaza, now_days:4919 country:Yemen, now_days:1984 country:Zambia, now_days:3730 country:Zimbabwe, now_days:4997 . features = [&#39;12/30/21&#39;,&#39;1/1/21&#39;] . confirmed[features].plot( kind=&quot;density&quot;, subplots=True, layout=(1, 2), sharex=False, figsize=(10, 4) ); . recover[features].plot( kind=&quot;density&quot;, subplots=True, layout=(1, 2), sharex=False, figsize=(10, 4) ); . LinAlgError Traceback (most recent call last) ~ AppData Local Temp/ipykernel_3132/1947723435.py in &lt;module&gt; -&gt; 1 recover[features].plot( 2 kind=&#34;density&#34;, subplots=True, layout=(1, 2), sharex=False, figsize=(10, 4) 3 ); ~ anaconda3 lib site-packages pandas plotting _core.py in __call__(self, *args, **kwargs) 970 data.columns = label_name 971 --&gt; 972 return plot_backend.plot(data, kind=kind, **kwargs) 973 974 __call__.__doc__ = __doc__ ~ anaconda3 lib site-packages pandas plotting _matplotlib __init__.py in plot(data, kind, **kwargs) 69 kwargs[&#34;ax&#34;] = getattr(ax, &#34;left_ax&#34;, ax) 70 plot_obj = PLOT_CLASSES[kind](data, **kwargs) &gt; 71 plot_obj.generate() 72 plot_obj.draw() 73 return plot_obj.result ~ anaconda3 lib site-packages pandas plotting _matplotlib core.py in generate(self) 286 self._compute_plot_data() 287 self._setup_subplots() --&gt; 288 self._make_plot() 289 self._add_table() 290 self._make_legend() ~ anaconda3 lib site-packages pandas plotting _matplotlib hist.py in _make_plot(self) 106 kwds[&#34;weights&#34;] = weights[:, i] 107 --&gt; 108 artists = self._plot(ax, y, column_num=i, stacking_id=stacking_id, **kwds) 109 self._append_legend_handles_labels(artists[0], label) 110 ~ anaconda3 lib site-packages pandas plotting _matplotlib hist.py in _plot(cls, ax, y, style, bw_method, ind, column_num, stacking_id, **kwds) 177 178 y = remove_na_arraylike(y) --&gt; 179 gkde = gaussian_kde(y, bw_method=bw_method) 180 181 y = gkde.evaluate(ind) ~ anaconda3 lib site-packages scipy stats kde.py in __init__(self, dataset, bw_method, weights) 204 self._neff = 1/sum(self._weights**2) 205 --&gt; 206 self.set_bandwidth(bw_method=bw_method) 207 208 def evaluate(self, points): ~ anaconda3 lib site-packages scipy stats kde.py in set_bandwidth(self, bw_method) 552 raise ValueError(msg) 553 --&gt; 554 self._compute_covariance() 555 556 def _compute_covariance(self): ~ anaconda3 lib site-packages scipy stats kde.py in _compute_covariance(self) 564 bias=False, 565 aweights=self.weights)) --&gt; 566 self._data_inv_cov = linalg.inv(self._data_covariance) 567 568 self.covariance = self._data_covariance * self.factor**2 ~ anaconda3 lib site-packages scipy linalg basic.py in inv(a, overwrite_a, check_finite) 966 inv_a, info = getri(lu, piv, lwork=lwork, overwrite_lu=1) 967 if info &gt; 0: --&gt; 968 raise LinAlgError(&#34;singular matrix&#34;) 969 if info &lt; 0: 970 raise ValueError(&#39;illegal value in %d-th argument of internal &#39; LinAlgError: singular matrix . death[features].plot( kind=&quot;density&quot;, subplots=True, layout=(1, 2), sharex=False, figsize=(10, 4) ); . recover[features].hist(figsize=(10, 4)); . sns.displot(confirmed[&#39;Country/Region&#39;]) . &lt;seaborn.axisgrid.FacetGrid at 0x22da6f51970&gt; . sns.boxplot(x=&quot;12/30/21&quot;, data=confirmed) . &lt;AxesSubplot:xlabel=&#39;12/30/21&#39;&gt; . sns.violinplot(x=&quot;12/30/21&quot;, data=confirmed) . &lt;AxesSubplot:xlabel=&#39;12/30/21&#39;&gt; . _, axes = plt.subplots(1, 2, sharey=True, figsize=(6, 4)) sns.boxplot(data=confirmed[&quot;12/30/21&quot;],ax=axes[0]) sns.violinplot(data=confirmed[&quot;12/30/21&quot;], ax=axes[1]); . numerical = list( set(confirmed.columns) - set( [ &quot;2/3/21&quot; &quot;5/7/21&quot;, &quot;10/9/21&quot;, &quot;12/30/21&quot;, ] ) ) . corr_matrix = confirmed[numerical].corr() sns.heatmap(corr_matrix); . plt.scatter(confirmed[&quot;12/30/20&quot;],confirmed[&quot;12/30/21&quot;]); . plt.scatter(recover[&quot;12/30/20&quot;],recover[&quot;12/30/21&quot;]); . plt.scatter(death[&quot;12/30/20&quot;],death[&quot;12/30/21&quot;]); . sns.jointplot(x=&quot;12/30/21&quot;, y=&quot;Country/Region&quot;, data=confirmed, kind=&quot;scatter&quot;) . &lt;seaborn.axisgrid.JointGrid at 0x22d82e44bb0&gt; . sns.jointplot(&quot;12/30/20&quot;, &quot;12/30/21&quot;, data=confirmed, kind=&quot;kde&quot;,color = &quot;g&quot;) . C: Users User anaconda3 lib site-packages seaborn _decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation. warnings.warn( . &lt;seaborn.axisgrid.JointGrid at 0x22d838b13a0&gt; . # %config InlineBackend.figure_format = &#39;png&#39; # sns.pairplot(confirmed[numerical]); . KeyboardInterrupt Traceback (most recent call last) ~ AppData Local Temp/ipykernel_3132/2197064883.py in &lt;module&gt; 1 # `pairplot()` may become very slow with the SVG format 2 get_ipython().run_line_magic(&#39;config&#39;, &#34;InlineBackend.figure_format = &#39;png&#39;&#34;) -&gt; 3 sns.pairplot(confirmed[numerical]); ~ anaconda3 lib site-packages seaborn _decorators.py in inner_f(*args, **kwargs) 44 ) 45 kwargs.update({k: arg for k, arg in zip(sig.parameters, args)}) &gt; 46 return f(**kwargs) 47 return inner_f 48 ~ anaconda3 lib site-packages seaborn axisgrid.py in pairplot(data, hue, hue_order, palette, vars, x_vars, y_vars, kind, diag_kind, markers, height, aspect, corner, dropna, plot_kws, diag_kws, grid_kws, size) 2094 # Set up the PairGrid 2095 grid_kws.setdefault(&#34;diag_sharey&#34;, diag_kind == &#34;hist&#34;) -&gt; 2096 grid = PairGrid(data, vars=vars, x_vars=x_vars, y_vars=y_vars, hue=hue, 2097 hue_order=hue_order, palette=palette, corner=corner, 2098 height=height, aspect=aspect, dropna=dropna, **grid_kws) ~ anaconda3 lib site-packages seaborn _decorators.py in inner_f(*args, **kwargs) 44 ) 45 kwargs.update({k: arg for k, arg in zip(sig.parameters, args)}) &gt; 46 return f(**kwargs) 47 return inner_f 48 ~ anaconda3 lib site-packages seaborn axisgrid.py in __init__(self, data, hue, hue_order, palette, hue_kws, vars, x_vars, y_vars, corner, diag_sharey, height, aspect, layout_pad, despine, dropna, size) 1242 fig = plt.figure(figsize=figsize) 1243 -&gt; 1244 axes = fig.subplots(len(y_vars), len(x_vars), 1245 sharex=&#34;col&#34;, sharey=&#34;row&#34;, 1246 squeeze=False) ~ anaconda3 lib site-packages matplotlib _api deprecation.py in wrapper(*args, **kwargs) 469 &#34;parameter will become keyword-only %(removal)s.&#34;, 470 name=name, obj_type=f&#34;parameter of {func.__name__}()&#34;) --&gt; 471 return func(*args, **kwargs) 472 473 return wrapper ~ anaconda3 lib site-packages matplotlib figure.py in subplots(self, nrows, ncols, sharex, sharey, squeeze, subplot_kw, gridspec_kw) 909 gridspec_kw = {} 910 gs = self.add_gridspec(nrows, ncols, figure=self, **gridspec_kw) --&gt; 911 axs = gs.subplots(sharex=sharex, sharey=sharey, squeeze=squeeze, 912 subplot_kw=subplot_kw) 913 return axs ~ anaconda3 lib site-packages matplotlib gridspec.py in subplots(self, sharex, sharey, squeeze, subplot_kw) 305 subplot_kw[&#34;sharex&#34;] = shared_with[sharex] 306 subplot_kw[&#34;sharey&#34;] = shared_with[sharey] --&gt; 307 axarr[row, col] = figure.add_subplot( 308 self[row, col], **subplot_kw) 309 ~ anaconda3 lib site-packages matplotlib figure.py in add_subplot(self, *args, **kwargs) 784 ax = subplot_class_factory(projection_class)(self, *args, **pkw) 785 key = (projection_class, pkw) --&gt; 786 return self._add_axes_internal(ax, key) 787 788 def _add_axes_internal(self, ax, key): ~ anaconda3 lib site-packages matplotlib figure.py in _add_axes_internal(self, ax, key) 790 self._axstack.add(ax) 791 self._localaxes.add(ax) --&gt; 792 self.sca(ax) 793 ax._remove_method = self.delaxes 794 # this is to support plt.subplot&#39;s re-selection logic ~ anaconda3 lib site-packages matplotlib figure.py in sca(self, a) 1496 def sca(self, a): 1497 &#34;&#34;&#34;Set the current Axes to be *a* and return *a*.&#34;&#34;&#34; -&gt; 1498 self._axstack.bubble(a) 1499 self._axobservers.process(&#34;_axes_change_event&#34;, self) 1500 return a ~ anaconda3 lib site-packages matplotlib figure.py in bubble(self, a) 84 Move the given axes, which must already exist in the stack, to the top. 85 &#34;&#34;&#34; &gt; 86 return super().bubble(self._entry_from_axes(a)) 87 88 def add(self, a): ~ anaconda3 lib site-packages matplotlib cbook __init__.py in bubble(self, o) 680 top_elements.append(elem) 681 else: --&gt; 682 self.push(elem) 683 for _ in top_elements: 684 self.push(o) ~ anaconda3 lib site-packages matplotlib cbook __init__.py in push(self, o) 639 &#34;&#34;&#34; 640 self._elements = self._elements[:self._pos + 1] + [o] --&gt; 641 self._pos = len(self._elements) - 1 642 return self() 643 KeyboardInterrupt: . ValueError Traceback (most recent call last) ~ anaconda3 lib site-packages IPython core formatters.py in __call__(self, obj) 339 pass 340 else: --&gt; 341 return printer(obj) 342 # Finally look for special method names 343 method = get_real_method(obj, self.print_method) ~ anaconda3 lib site-packages IPython core pylabtools.py in print_figure(fig, fmt, bbox_inches, base64, **kwargs) 149 FigureCanvasBase(fig) 150 --&gt; 151 fig.canvas.print_figure(bytes_io, **kw) 152 data = bytes_io.getvalue() 153 if fmt == &#39;svg&#39;: ~ anaconda3 lib site-packages matplotlib backend_bases.py in print_figure(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs) 2219 # CL works. &#34;tight&#34; also needs a draw to get the right 2220 # locations: -&gt; 2221 renderer = _get_renderer( 2222 self.figure, 2223 functools.partial( ~ anaconda3 lib site-packages matplotlib backend_bases.py in _get_renderer(figure, print_method) 1574 figure.canvas._get_output_canvas(None, fmt), f&#34;print_{fmt}&#34;) 1575 try: -&gt; 1576 print_method(io.BytesIO()) 1577 except Done as exc: 1578 renderer, = figure._cachedRenderer, = exc.args ~ anaconda3 lib site-packages matplotlib backend_bases.py in wrapper(*args, **kwargs) 1667 kwargs.pop(arg) 1668 -&gt; 1669 return func(*args, **kwargs) 1670 1671 return wrapper ~ anaconda3 lib site-packages matplotlib backends backend_agg.py in print_png(self, filename_or_obj, metadata, pil_kwargs, *args) 506 *metadata*, including the default &#39;Software&#39; key. 507 &#34;&#34;&#34; --&gt; 508 FigureCanvasAgg.draw(self) 509 mpl.image.imsave( 510 filename_or_obj, self.buffer_rgba(), format=&#34;png&#34;, origin=&#34;upper&#34;, ~ anaconda3 lib site-packages matplotlib backends backend_agg.py in draw(self) 399 def draw(self): 400 # docstring inherited --&gt; 401 self.renderer = self.get_renderer(cleared=True) 402 # Acquire a lock on the shared font cache. 403 with RendererAgg.lock, ~ anaconda3 lib site-packages matplotlib backends backend_agg.py in get_renderer(self, cleared) 415 and getattr(self, &#34;_lastKey&#34;, None) == key) 416 if not reuse_renderer: --&gt; 417 self.renderer = RendererAgg(w, h, self.figure.dpi) 418 self._lastKey = key 419 elif cleared: ~ anaconda3 lib site-packages matplotlib backends backend_agg.py in __init__(self, width, height, dpi) 89 self.width = width 90 self.height = height &gt; 91 self._renderer = _RendererAgg(int(width), int(height), dpi) 92 self._filter_renderers = [] 93 ValueError: Image size of 127620x127620 pixels is too large. It must be less than 2^16 in each direction. . &lt;Figure size 127620x127620 with 2551 Axes&gt; . sns.lmplot( &quot;12/30/20&quot;, &quot;12/30/21&quot;, data=confirmed,hue=&quot;Country/Region&quot;, fit_reg=False ); . C: Users User anaconda3 lib site-packages seaborn _decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation. warnings.warn( . x = confirmed.drop([&#39;Country/Region&#39;,&#39;Province/State&#39;],axis=1) . from sklearn.manifold import TSNE from sklearn.preprocessing import StandardScaler . scaler = StandardScaler() X_scaled = scaler.fit_transform(x) . %%time tsne = TSNE(random_state=7) tsne_repr = tsne.fit_transform(X_scaled) . ValueError Traceback (most recent call last) &lt;timed exec&gt; in &lt;module&gt; ~ anaconda3 lib site-packages sklearn manifold _t_sne.py in fit_transform(self, X, y) 930 Embedding of the training data in low-dimensional space. 931 &#34;&#34;&#34; --&gt; 932 embedding = self._fit(X) 933 self.embedding_ = embedding 934 return self.embedding_ ~ anaconda3 lib site-packages sklearn manifold _t_sne.py in _fit(self, X, skip_num_points) 700 ) 701 if self.method == &#39;barnes_hut&#39;: --&gt; 702 X = self._validate_data(X, accept_sparse=[&#39;csr&#39;], 703 ensure_min_samples=2, 704 dtype=[np.float32, np.float64]) ~ anaconda3 lib site-packages sklearn base.py in _validate_data(self, X, y, reset, validate_separately, **check_params) 419 out = X 420 elif isinstance(y, str) and y == &#39;no_validation&#39;: --&gt; 421 X = check_array(X, **check_params) 422 out = X 423 else: ~ anaconda3 lib site-packages sklearn utils validation.py in inner_f(*args, **kwargs) 61 extra_args = len(args) - len(all_args) 62 if extra_args &lt;= 0: &gt; 63 return f(*args, **kwargs) 64 65 # extra_args &gt; 0 ~ anaconda3 lib site-packages sklearn utils validation.py in check_array(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator) 718 719 if force_all_finite: --&gt; 720 _assert_all_finite(array, 721 allow_nan=force_all_finite == &#39;allow-nan&#39;) 722 ~ anaconda3 lib site-packages sklearn utils validation.py in _assert_all_finite(X, allow_nan, msg_dtype) 101 not allow_nan and not np.isfinite(X).all()): 102 type_err = &#39;infinity&#39; if allow_nan else &#39;NaN, infinity&#39; --&gt; 103 raise ValueError( 104 msg_err.format 105 (type_err, ValueError: Input contains NaN, infinity or a value too large for dtype(&#39;float64&#39;). . plt.scatter(X_scaled[:, 0], X_scaled[:, 1], alpha=0.5); . confirmed[[x for x in confirmed.columns if &quot;21&quot; in x] + [&quot;Country/Region&quot;]].groupby( &quot;Country/Region&quot; ).sum().plot(); . confirmed[[x for x in confirmed.columns if &quot;21&quot; in x] + [&quot;Country/Region&quot;]].groupby( &quot;Country/Region&quot; ).sum().plot(kind=&quot;bar&quot;,rot=40) . &lt;AxesSubplot:xlabel=&#39;Country/Region&#39;&gt; . Error in callback &lt;function flush_figures at 0x0000022DFCA4B940&gt; (for post_execute): . KeyboardInterrupt Traceback (most recent call last) ~ anaconda3 lib site-packages matplotlib_inline backend_inline.py in flush_figures() 119 # ignore the tracking, just draw and close all figures 120 try: --&gt; 121 return show(True) 122 except Exception as e: 123 # safely show traceback if in IPython, else raise ~ anaconda3 lib site-packages matplotlib_inline backend_inline.py in show(close, block) 39 try: 40 for figure_manager in Gcf.get_all_fig_managers(): &gt; 41 display( 42 figure_manager.canvas.figure, 43 metadata=_fetch_figure_metadata(figure_manager.canvas.figure) ~ anaconda3 lib site-packages IPython core display.py in display(include, exclude, metadata, transient, display_id, *objs, **kwargs) 318 publish_display_data(data=obj, metadata=metadata, **kwargs) 319 else: --&gt; 320 format_dict, md_dict = format(obj, include=include, exclude=exclude) 321 if not format_dict: 322 # nothing to display (e.g. _ipython_display_ took over) ~ anaconda3 lib site-packages IPython core formatters.py in format(self, obj, include, exclude) 178 md = None 179 try: --&gt; 180 data = formatter(obj) 181 except: 182 # FIXME: log the exception &lt;decorator-gen-2&gt; in __call__(self, obj) ~ anaconda3 lib site-packages IPython core formatters.py in catch_format_error(method, self, *args, **kwargs) 222 &#34;&#34;&#34;show traceback on failed format call&#34;&#34;&#34; 223 try: --&gt; 224 r = method(self, *args, **kwargs) 225 except NotImplementedError: 226 # don&#39;t warn on NotImplementedErrors ~ anaconda3 lib site-packages IPython core formatters.py in __call__(self, obj) 339 pass 340 else: --&gt; 341 return printer(obj) 342 # Finally look for special method names 343 method = get_real_method(obj, self.print_method) ~ anaconda3 lib site-packages IPython core pylabtools.py in print_figure(fig, fmt, bbox_inches, base64, **kwargs) 149 FigureCanvasBase(fig) 150 --&gt; 151 fig.canvas.print_figure(bytes_io, **kw) 152 data = bytes_io.getvalue() 153 if fmt == &#39;svg&#39;: ~ anaconda3 lib site-packages matplotlib backend_bases.py in print_figure(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs) 2232 if bbox_inches: 2233 if bbox_inches == &#34;tight&#34;: -&gt; 2234 bbox_inches = self.figure.get_tightbbox( 2235 renderer, bbox_extra_artists=bbox_extra_artists) 2236 if pad_inches is None: ~ anaconda3 lib site-packages matplotlib figure.py in get_tightbbox(self, renderer, bbox_extra_artists) 1637 1638 for a in artists: -&gt; 1639 bbox = a.get_tightbbox(renderer) 1640 if bbox is not None and (bbox.width != 0 or bbox.height != 0): 1641 bb.append(bbox) ~ anaconda3 lib site-packages matplotlib axes _base.py in get_tightbbox(self, renderer, call_axes_locator, bbox_extra_artists, for_layout_only) 4475 # this artist 4476 continue -&gt; 4477 bbox = a.get_tightbbox(renderer) 4478 if (bbox is not None 4479 and 0 &lt; bbox.width &lt; np.inf ~ anaconda3 lib site-packages matplotlib legend.py in get_tightbbox(self, renderer) 909 The bounding box in figure pixel coordinates. 910 &#34;&#34;&#34; --&gt; 911 return self._legend_box.get_window_extent(renderer) 912 913 def get_frame_on(self): ~ anaconda3 lib site-packages matplotlib offsetbox.py in get_window_extent(self, renderer) 351 &#34;&#34;&#34;Return the bounding box (`.Bbox`) in display space.&#34;&#34;&#34; 352 w, h, xd, yd, offsets = self.get_extent_offsets(renderer) --&gt; 353 px, py = self.get_offset(w, h, xd, yd, renderer) 354 return mtransforms.Bbox.from_bounds(px - xd, py - yd, w, h) 355 ~ anaconda3 lib site-packages matplotlib offsetbox.py in get_offset(self, width, height, xdescent, ydescent, renderer) 290 291 &#34;&#34;&#34; --&gt; 292 return (self._offset(width, height, xdescent, ydescent, renderer) 293 if callable(self._offset) 294 else self._offset) ~ anaconda3 lib site-packages matplotlib legend.py in _findoffset(self, width, height, xdescent, ydescent, renderer) 576 577 if self._loc == 0: # &#34;best&#34;. --&gt; 578 x, y = self._find_best_position(width, height, renderer) 579 elif self._loc in Legend.codes.values(): # Fixed location. 580 bbox = Bbox.from_bounds(0, 0, width, height) ~ anaconda3 lib site-packages matplotlib legend.py in _find_best_position(self, width, height, renderer, consider) 1046 for line in lines) 1047 + legendBox.count_contains(offsets) -&gt; 1048 + legendBox.count_overlaps(bboxes) 1049 + sum(line.intersects_bbox(legendBox, filled=False) 1050 for line in lines)) ~ anaconda3 lib site-packages matplotlib transforms.py in count_overlaps(self, bboxes) 629 &#34;&#34;&#34; 630 return count_bboxes_overlapping_bbox( --&gt; 631 self, np.atleast_3d([np.array(x) for x in bboxes])) 632 633 def expanded(self, sw, sh): &lt;__array_function__ internals&gt; in atleast_3d(*args, **kwargs) ~ anaconda3 lib site-packages numpy core shape_base.py in atleast_3d(*arys) 190 res = [] 191 for ary in arys: --&gt; 192 ary = asanyarray(ary) 193 if ary.ndim == 0: 194 result = ary.reshape(1, 1, 1) ~ anaconda3 lib site-packages numpy core _asarray.py in asanyarray(a, dtype, order, like) 169 return _asanyarray_with_like(a, dtype=dtype, order=order, like=like) 170 --&gt; 171 return array(a, dtype, copy=False, order=order, subok=True) 172 173 KeyboardInterrupt: . sns.pairplot(confirmed[700:713]) . KeyboardInterrupt Traceback (most recent call last) ~ AppData Local Temp/ipykernel_3132/428816351.py in &lt;module&gt; -&gt; 1 sns.pairplot(confirmed[700:713]) ~ anaconda3 lib site-packages seaborn _decorators.py in inner_f(*args, **kwargs) 44 ) 45 kwargs.update({k: arg for k, arg in zip(sig.parameters, args)}) &gt; 46 return f(**kwargs) 47 return inner_f 48 ~ anaconda3 lib site-packages seaborn axisgrid.py in pairplot(data, hue, hue_order, palette, vars, x_vars, y_vars, kind, diag_kind, markers, height, aspect, corner, dropna, plot_kws, diag_kws, grid_kws, size) 2094 # Set up the PairGrid 2095 grid_kws.setdefault(&#34;diag_sharey&#34;, diag_kind == &#34;hist&#34;) -&gt; 2096 grid = PairGrid(data, vars=vars, x_vars=x_vars, y_vars=y_vars, hue=hue, 2097 hue_order=hue_order, palette=palette, corner=corner, 2098 height=height, aspect=aspect, dropna=dropna, **grid_kws) ~ anaconda3 lib site-packages seaborn _decorators.py in inner_f(*args, **kwargs) 44 ) 45 kwargs.update({k: arg for k, arg in zip(sig.parameters, args)}) &gt; 46 return f(**kwargs) 47 return inner_f 48 ~ anaconda3 lib site-packages seaborn axisgrid.py in __init__(self, data, hue, hue_order, palette, hue_kws, vars, x_vars, y_vars, corner, diag_sharey, height, aspect, layout_pad, despine, dropna, size) 1242 fig = plt.figure(figsize=figsize) 1243 -&gt; 1244 axes = fig.subplots(len(y_vars), len(x_vars), 1245 sharex=&#34;col&#34;, sharey=&#34;row&#34;, 1246 squeeze=False) ~ anaconda3 lib site-packages matplotlib _api deprecation.py in wrapper(*args, **kwargs) 469 &#34;parameter will become keyword-only %(removal)s.&#34;, 470 name=name, obj_type=f&#34;parameter of {func.__name__}()&#34;) --&gt; 471 return func(*args, **kwargs) 472 473 return wrapper ~ anaconda3 lib site-packages matplotlib figure.py in subplots(self, nrows, ncols, sharex, sharey, squeeze, subplot_kw, gridspec_kw) 909 gridspec_kw = {} 910 gs = self.add_gridspec(nrows, ncols, figure=self, **gridspec_kw) --&gt; 911 axs = gs.subplots(sharex=sharex, sharey=sharey, squeeze=squeeze, 912 subplot_kw=subplot_kw) 913 return axs ~ anaconda3 lib site-packages matplotlib gridspec.py in subplots(self, sharex, sharey, squeeze, subplot_kw) 305 subplot_kw[&#34;sharex&#34;] = shared_with[sharex] 306 subplot_kw[&#34;sharey&#34;] = shared_with[sharey] --&gt; 307 axarr[row, col] = figure.add_subplot( 308 self[row, col], **subplot_kw) 309 ~ anaconda3 lib site-packages matplotlib figure.py in add_subplot(self, *args, **kwargs) 782 projection_class, pkw = self._process_projection_requirements( 783 *args, **kwargs) --&gt; 784 ax = subplot_class_factory(projection_class)(self, *args, **pkw) 785 key = (projection_class, pkw) 786 return self._add_axes_internal(ax, key) ~ anaconda3 lib site-packages matplotlib axes _subplots.py in __init__(self, fig, *args, **kwargs) 34 &#34;&#34;&#34; 35 # _axes_class is set in the subplot_class_factory &gt; 36 self._axes_class.__init__(self, fig, [0, 0, 1, 1], **kwargs) 37 # This will also update the axes position. 38 self.set_subplotspec(SubplotSpec._from_subplot_args(fig, args)) ~ anaconda3 lib site-packages matplotlib _api deprecation.py in wrapper(*args, **kwargs) 469 &#34;parameter will become keyword-only %(removal)s.&#34;, 470 name=name, obj_type=f&#34;parameter of {func.__name__}()&#34;) --&gt; 471 return func(*args, **kwargs) 472 473 return wrapper ~ anaconda3 lib site-packages matplotlib axes _base.py in __init__(self, fig, rect, facecolor, frameon, sharex, sharey, label, xscale, yscale, box_aspect, **kwargs) 632 633 self._rasterization_zorder = None --&gt; 634 self.cla() 635 636 # funcs used to format x and y - fall back on major formatters ~ anaconda3 lib site-packages matplotlib axes _base.py in cla(self) 1295 1296 self.xaxis.set_clip_path(self.patch) -&gt; 1297 self.yaxis.set_clip_path(self.patch) 1298 1299 self._shared_x_axes.clean() ~ anaconda3 lib site-packages matplotlib axis.py in set_clip_path(self, clippath, transform) 918 super().set_clip_path(clippath, transform) 919 for child in self.majorTicks + self.minorTicks: --&gt; 920 child.set_clip_path(clippath, transform) 921 self.stale = True 922 ~ anaconda3 lib site-packages matplotlib axis.py in set_clip_path(self, clippath, transform) 239 def set_clip_path(self, clippath, transform=None): 240 # docstring inherited --&gt; 241 super().set_clip_path(clippath, transform) 242 self.gridline.set_clip_path(clippath, transform) 243 self.stale = True ~ anaconda3 lib site-packages matplotlib artist.py in set_clip_path(self, path, transform) 778 if isinstance(path, Rectangle): 779 self.clipbox = TransformedBbox(Bbox.unit(), --&gt; 780 path.get_transform()) 781 self._clippath = None 782 success = True ~ anaconda3 lib site-packages matplotlib patches.py in get_transform(self) 271 def get_transform(self): 272 &#34;&#34;&#34;Return the `~.transforms.Transform` applied to the `Patch`.&#34;&#34;&#34; --&gt; 273 return self.get_patch_transform() + artist.Artist.get_transform(self) 274 275 def get_data_transform(self): ~ anaconda3 lib site-packages matplotlib patches.py in get_patch_transform(self) 777 bbox = self.get_bbox() 778 return (transforms.BboxTransformTo(bbox) --&gt; 779 + transforms.Affine2D().rotate_deg_around( 780 bbox.x0, bbox.y0, self.angle)) 781 ~ anaconda3 lib site-packages matplotlib transforms.py in rotate_deg_around(self, x, y, degrees) 2000 # Cast to float to avoid wraparound issues with uint8&#39;s 2001 x, y = float(x), float(y) -&gt; 2002 return self.translate(-x, -y).rotate_deg(degrees).translate(x, y) 2003 2004 def translate(self, tx, ty): ~ anaconda3 lib site-packages matplotlib transforms.py in rotate_deg(self, degrees) 1978 and :meth:`scale`. 1979 &#34;&#34;&#34; -&gt; 1980 return self.rotate(math.radians(degrees)) 1981 1982 def rotate_around(self, x, y, theta): ~ anaconda3 lib site-packages matplotlib transforms.py in rotate(self, theta) 1966 rotate_mtx = np.array([[a, -b, 0.0], [b, a, 0.0], [0.0, 0.0, 1.0]], 1967 float) -&gt; 1968 self._mtx = np.dot(rotate_mtx, self._mtx) 1969 self.invalidate() 1970 return self &lt;__array_function__ internals&gt; in dot(*args, **kwargs) KeyboardInterrupt: . ValueError Traceback (most recent call last) ~ anaconda3 lib site-packages IPython core formatters.py in __call__(self, obj) 339 pass 340 else: --&gt; 341 return printer(obj) 342 # Finally look for special method names 343 method = get_real_method(obj, self.print_method) ~ anaconda3 lib site-packages IPython core pylabtools.py in print_figure(fig, fmt, bbox_inches, base64, **kwargs) 149 FigureCanvasBase(fig) 150 --&gt; 151 fig.canvas.print_figure(bytes_io, **kw) 152 data = bytes_io.getvalue() 153 if fmt == &#39;svg&#39;: ~ anaconda3 lib site-packages matplotlib backend_bases.py in print_figure(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs) 2219 # CL works. &#34;tight&#34; also needs a draw to get the right 2220 # locations: -&gt; 2221 renderer = _get_renderer( 2222 self.figure, 2223 functools.partial( ~ anaconda3 lib site-packages matplotlib backend_bases.py in _get_renderer(figure, print_method) 1574 figure.canvas._get_output_canvas(None, fmt), f&#34;print_{fmt}&#34;) 1575 try: -&gt; 1576 print_method(io.BytesIO()) 1577 except Done as exc: 1578 renderer, = figure._cachedRenderer, = exc.args ~ anaconda3 lib site-packages matplotlib backend_bases.py in wrapper(*args, **kwargs) 1667 kwargs.pop(arg) 1668 -&gt; 1669 return func(*args, **kwargs) 1670 1671 return wrapper ~ anaconda3 lib site-packages matplotlib backends backend_agg.py in print_png(self, filename_or_obj, metadata, pil_kwargs, *args) 506 *metadata*, including the default &#39;Software&#39; key. 507 &#34;&#34;&#34; --&gt; 508 FigureCanvasAgg.draw(self) 509 mpl.image.imsave( 510 filename_or_obj, self.buffer_rgba(), format=&#34;png&#34;, origin=&#34;upper&#34;, ~ anaconda3 lib site-packages matplotlib backends backend_agg.py in draw(self) 399 def draw(self): 400 # docstring inherited --&gt; 401 self.renderer = self.get_renderer(cleared=True) 402 # Acquire a lock on the shared font cache. 403 with RendererAgg.lock, ~ anaconda3 lib site-packages matplotlib backends backend_agg.py in get_renderer(self, cleared) 415 and getattr(self, &#34;_lastKey&#34;, None) == key) 416 if not reuse_renderer: --&gt; 417 self.renderer = RendererAgg(w, h, self.figure.dpi) 418 self._lastKey = key 419 elif cleared: ~ anaconda3 lib site-packages matplotlib backends backend_agg.py in __init__(self, width, height, dpi) 89 self.width = width 90 self.height = height &gt; 91 self._renderer = _RendererAgg(int(width), int(height), dpi) 92 self._filter_renderers = [] 93 ValueError: Image size of 128340x128340 pixels is too large. It must be less than 2^16 in each direction. . &lt;Figure size 128340x128340 with 1007 Axes&gt; . sns.displot(confirmed[&quot;Country/Region&quot;]) . &lt;seaborn.axisgrid.FacetGrid at 0x22dd36cb400&gt; . sns.FacetGrid(confirmed, hue=&quot;Country/Region&quot;, size=12).map(sns.kdeplot, &quot;12/30/21&quot;).add_legend(); . C: Users User anaconda3 lib site-packages seaborn axisgrid.py:337: UserWarning: The `size` parameter has been renamed to `height`; please update your code. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) C: Users User anaconda3 lib site-packages seaborn distributions.py:316: UserWarning: Dataset has 0 variance; skipping density estimate. Pass `warn_singular=False` to disable this warning. warnings.warn(msg, UserWarning) . . .",
            "url": "https://riyadhuddin.github.io/mlbangla/python/jupyter/2021/12/31/time_series.html",
            "relUrl": "/python/jupyter/2021/12/31/time_series.html",
            "date": " • Dec 31, 2021"
        }
        
    
  
    
        ,"post3": {
            "title": "hello world",
            "content": "this is a hello post . Tweetcards . As it is my 1st SparkAR effect so may not be smooth enough, yet working on improving my skill. You can try them on Facebook: https://t.co/WAobiKY0GZand Instagram: https://t.co/2p1n7MBVasThank You ❤️🇧🇩#sparkar #bangladesh #1971war #16th #december #victoryday . &mdash; Riyadh Uddin (@RiyadhUddin_) December 13, 2021 Footnotes . . View this post on Instagram A post shared by Riyadh Uddin (@riyadh_uddin) .",
            "url": "https://riyadhuddin.github.io/mlbangla/markdown/2021/12/31/hello.html",
            "relUrl": "/markdown/2021/12/31/hello.html",
            "date": " • Dec 31, 2021"
        }
        
    
  
    
        ,"post4": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://riyadhuddin.github.io/mlbangla/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Images . . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . As it is my 1st SparkAR effect so may not be smooth enough, yet working on improving my skill. You can try them on Facebook: https://t.co/WAobiKY0GZand Instagram: https://t.co/2p1n7MBVasThank You ❤️🇧🇩#sparkar #bangladesh #1971war #16th #december #victoryday . &mdash; Riyadh Uddin (@RiyadhUddin_) December 13, 2021 Footnotes .",
            "url": "https://riyadhuddin.github.io/mlbangla/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "",
          "url": "https://riyadhuddin.github.io/mlbangla/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://riyadhuddin.github.io/mlbangla/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}